{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect, useState } from \"react\";\nimport Router from \"next/router\";\nimport PropTypes from \"prop-types\"; // Material UI\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\"; // GA\n\nimport * as gtag from \"../lib/gtag\"; // Context\n\nimport { ModalContext } from \"../contexts/ModalContext\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: authenticated,\n    1: setAuthenticated\n  } = useState(false);\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: showOnboard,\n    1: setShowOnboard\n  } = useState(false);\n  const {\n    0: showLogin,\n    1: setShowLogin\n  } = useState(false);\n  const {\n    0: showEdit,\n    1: setShowEdit\n  } = useState(false);\n  const {\n    0: showDelete,\n    1: setShowDelete\n  } = useState(false);\n  const {\n    0: showProfile,\n    1: setShowProfile\n  } = useState(false);\n  const {\n    0: showCreate,\n    1: setShowCreate\n  } = useState(false);\n  useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url);\n    };\n\n    Router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return () => {\n      Router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, []);\n\n  if (loading) {\n    return null;\n  } else {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(UserContext.Provider, {\n      value: {\n        user,\n        authenticated,\n        token,\n        setUser,\n        setAuthenticated,\n        setToken,\n        loading,\n        setLoading\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(ModalContext.Provider, {\n      value: {\n        showOnboard,\n        setShowOnboard,\n        showLogin,\n        setShowLogin,\n        showEdit,\n        setShowEdit,\n        showDelete,\n        setShowDelete,\n        showProfile,\n        setShowProfile,\n        showCreate,\n        setShowCreate\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }))))));\n  }\n};\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\nexport default MyApp;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/pages/_app.js"],"names":["useEffect","useState","Router","PropTypes","ThemeProvider","CssBaseline","theme","gtag","ModalContext","UserContext","MyApp","Component","pageProps","loading","setLoading","user","setUser","authenticated","setAuthenticated","token","setToken","showOnboard","setShowOnboard","showLogin","setShowLogin","showEdit","setShowEdit","showDelete","setShowDelete","showProfile","setShowProfile","showCreate","setShowCreate","handleRouteChange","url","pageview","events","on","off","propTypes","elementType","isRequired","object"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Router from \"next/router\";\nimport PropTypes from \"prop-types\";\n// Material UI\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\";\n// GA\nimport * as gtag from \"../lib/gtag\";\n// Context\nimport { ModalContext } from \"../contexts/ModalContext\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst MyApp = ({ Component, pageProps }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const [token, setToken] = useState(null);\n  const [showOnboard, setShowOnboard] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n\n  useEffect(() => {\n    const handleRouteChange = (url) => {\n      gtag.pageview(url);\n    };\n    Router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return () => {\n      Router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, []);\n\n  if (loading) {\n    return null;\n  } else {\n    return (\n      <React.Fragment>\n        <UserContext.Provider\n          value={{\n            user,\n            authenticated,\n            token,\n            setUser,\n            setAuthenticated,\n            setToken,\n            loading,\n            setLoading,\n          }}\n        >\n          <ModalContext.Provider\n            value={{\n              showOnboard,\n              setShowOnboard,\n              showLogin,\n              setShowLogin,\n              showEdit,\n              setShowEdit,\n              showDelete,\n              setShowDelete,\n              showProfile,\n              setShowProfile,\n              showCreate,\n              setShowCreate,\n            }}\n          >\n            <ThemeProvider theme={theme}>\n              {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n              <CssBaseline />\n              <Component {...pageProps} />\n            </ThemeProvider>\n          </ModalContext.Provider>\n        </UserContext.Provider>\n      </React.Fragment>\n    );\n  }\n};\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}