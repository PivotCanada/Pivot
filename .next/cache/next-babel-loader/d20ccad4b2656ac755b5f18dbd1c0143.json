{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Delete/Modal.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState, useRef } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport Form from \"./Form\";\nimport Button from \"@material-ui/core/Button\"; // import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  // let width = useWidth();\n  const useStyles = makeStyles(theme => ({\n    dialog: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"100vw\",\n      minHeight: \"100vh\"\n    },\n    closeButton: {\n      width: \"50px\",\n      height: \"50px\" // position: \"fixed\",\n      // top: `6.5px`,\n      // right: \"5px\",\n\n    },\n    icon: {\n      width: \"60px\",\n      height: \"auto\",\n      // position: \"fixed\",\n      // top: `22.5px`,\n      marginLeft: \"10px\"\n    },\n    action: {\n      zIndex: 2,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      minWidth: \"100vw\",\n      height: \"65px\"\n    }\n  }));\n  const classes = useStyles();\n  const Ref = useRef(0);\n  const {\n    showDelete,\n    setShowDelete\n  } = useContext(ModalContext);\n  const {\n    user\n  } = useContext(UserContext);\n\n  const handleOpen = () => {\n    setShowDelete(true);\n  };\n\n  const handleClose = () => {\n    setShowDelete(false);\n  };\n\n  useEffect(() => {\n    console.log(window.scrollY);\n  }, []);\n  return __jsx(Dialog, {\n    scroll: \"body\",\n    fullScreen: true,\n    open: showDelete,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(DialogActions, {\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    ref: Ref,\n    className: classes.icon,\n    src: \"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\",\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(IconButton, {\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Delete/Modal.js"],"names":["React","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","CloseIcon","ModalContext","useEffect","useContext","useState","useRef","UserContext","Form","Button","TransitionsModal","props","useStyles","theme","dialog","display","flexDirection","alignItems","justifyContent","minWidth","minHeight","closeButton","width","height","icon","marginLeft","action","zIndex","classes","Ref","showDelete","setShowDelete","user","handleOpen","handleClose","console","log","window","scrollY"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState, useRef } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\n\nimport Form from \"./Form\";\n\nimport Button from \"@material-ui/core/Button\";\n\n// import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  // let width = useWidth();\n\n  const useStyles = makeStyles((theme) => ({\n    dialog: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"100vw\",\n      minHeight: \"100vh\",\n    },\n\n    closeButton: {\n      width: \"50px\",\n      height: \"50px\",\n      // position: \"fixed\",\n      // top: `6.5px`,\n      // right: \"5px\",\n    },\n    icon: {\n      width: \"60px\",\n      height: \"auto\",\n      // position: \"fixed\",\n      // top: `22.5px`,\n      marginLeft: \"10px\",\n    },\n    action: {\n      zIndex: 2,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      minWidth: \"100vw\",\n      height: \"65px\",\n    },\n  }));\n\n  const classes = useStyles();\n  const Ref = useRef(0);\n  const { showDelete, setShowDelete } = useContext(ModalContext);\n  const { user } = useContext(UserContext);\n\n  const handleOpen = () => {\n    setShowDelete(true);\n  };\n\n  const handleClose = () => {\n    setShowDelete(false);\n  };\n\n  useEffect(() => {\n    console.log(window.scrollY);\n  }, []);\n\n  return (\n    <Dialog\n      scroll=\"body\"\n      fullScreen={true}\n      open={showDelete}\n      onClose={handleClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogActions className={classes.action}>\n        <img\n          ref={Ref}\n          className={classes.icon}\n          src=\"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\"\n          alt=\"icon\"\n        />\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogActions>\n      <Form />\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}