{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Home/Main.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext, useState } from \"react\"; // Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\"; // Components\n\nimport MobileCard from \"./MobileCard\";\nimport Carousel from \"./Carousel\";\nimport Search from \"./Search\";\nimport PostCard from \"../Post/Main/Card\";\nimport Posts from \"./Posts\";\nimport Stories from \"./Stories\";\nimport CreatePost from \"../Post/Create/MainProfile\"; // Contexts\n\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport Router from \"next/router\"; // Utils\n\nimport { fetchAllUsers } from \"./utils/fetchAllUsers\";\nimport { fetchAllPosts } from \"./utils/fetchAllPosts\"; // Hooks\n\nimport useWitdh from \"../../hooks/useWidth\";\nimport useValidate from \"../../hooks/useValidate\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n    marginTop: 150,\n    marginBottom: 75,\n    width: \"100vw\",\n    overflowX: \"hidden\"\n  },\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    margin: 0\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    margin: 0\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Playfair Display, serif\",\n    width: \"90vw\"\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n    fontFamily: \"Poppins, serif\"\n  },\n  button: {\n    marginTop: 45,\n    marginBottom: \"3rem\",\n    textTransform: \"none\",\n    paddingTop: 17,\n    paddingBottom: 17,\n    paddingLeft: 55,\n    paddingRight: 55,\n    fontSize: 21,\n    fontFamily: \"Poppins, serif\"\n  },\n  logo: {\n    width: 100,\n    height: \"auto\"\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\"\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\"\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\"\n  },\n  createPost: {\n    position: \"fixed\",\n    bottom: 40,\n    right: 40,\n    fontFamily: \"Noto Sans, sans serif\",\n    textTransform: \"none\"\n  },\n  addIcon: {}\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const {\n    0: openSnack,\n    1: setOpenSnack\n  } = useState(false);\n  const {\n    0: content,\n    1: setContent\n  } = useState([]);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: display,\n    1: setDisplay\n  } = useState(true);\n  const {\n    0: contentDisplay,\n    1: setContentDisplay\n  } = useState(\"stories\");\n  const {\n    width,\n    setWidth\n  } = useWitdh();\n  const {\n    user,\n    setUser,\n    setAuthenticated,\n    authenticated,\n    setLoading\n  } = useContext(UserContext);\n  const {\n    setShowProfile\n  } = useContext(ModalContext);\n  const {\n    validateSession\n  } = useValidate(setUser, setAuthenticated, setLoading); // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n  }, []);\n  useEffect(() => {}, [display]);\n  useEffect(() => {\n    if (!user) {\n      validateSession();\n    }\n\n    if (user) {\n      setOpenSnack(true);\n    }\n\n    fetchAllUsers().then(response => {\n      console.log(response);\n      setContent(response.data);\n    });\n    fetchAllPosts().then(response => {\n      console.log(response);\n      setPosts(response.data.reverse());\n    });\n  }, [user]);\n\n  if (width > 950) {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, __jsx(Snackbar, {\n      open: openSnack,\n      autoHideDuration: 3000,\n      onClose: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, __jsx(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      onClose: () => setOpenSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Action Succesful\")), __jsx(\"div\", {\n      className: classes.innerWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, __jsx(Search, {\n      setDisplay: setDisplay,\n      display: display,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), __jsx(ButtonGroup, {\n      style: {\n        display: display ? \"block\" : \"none\"\n      },\n      color: \"primary\",\n      \"aria-label\": \"outlined secondary button group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      style: {\n        textTransform: \"none\"\n      },\n      onClick: () => setContentDisplay(\"stories\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"Stories\"), __jsx(Button, {\n      style: {\n        textTransform: \"none\"\n      },\n      onClick: () => setContentDisplay(\"posts\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, \"Posts\")), __jsx(\"div\", {\n      className: classes.contentWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, authenticated && contentDisplay === \"posts\" ? __jsx(CreatePost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }) : null, contentDisplay === \"posts\" ? __jsx(Posts, {\n      display: display,\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }) : null, contentDisplay === \"stories\" ? __jsx(Stories, {\n      display: display,\n      content: content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }) : null)), user ? __jsx(Fab, {\n      onClick: () => setShowProfile(true),\n      className: classes.createPost,\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, __jsx(AccountCircleIcon, {\n      className: classes.addIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    })) : null);\n  } else {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.innerWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, content.map(user => {\n      return __jsx(MobileCard, {\n        key: user._id,\n        story: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Home/Main.js"],"names":["useEffect","useContext","useState","makeStyles","Fab","AddIcon","AccountCircleIcon","Button","ButtonGroup","Snackbar","MuiAlert","MobileCard","Carousel","Search","PostCard","Posts","Stories","CreatePost","UserContext","ModalContext","Router","fetchAllUsers","fetchAllPosts","useWitdh","useValidate","useStyles","theme","root","display","flexDirection","alignItems","minHeight","marginTop","marginBottom","width","overflowX","textField","flexGrow","flexShrink","contentWrapper","backgroundColor","borderRadius","margin","innerWrapper","header","textAlign","fontSize","fontWeight","fontFamily","text","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","logo","height","nfb","cardContainer","justifyContent","info","color","createPost","position","bottom","right","addIcon","Main","classes","openSnack","setOpenSnack","content","setContent","posts","setPosts","setDisplay","contentDisplay","setContentDisplay","setWidth","user","setUser","setAuthenticated","authenticated","setLoading","setShowProfile","validateSession","window","innerWidth","then","response","console","log","data","reverse","map","_id"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n// Components\nimport MobileCard from \"./MobileCard\";\nimport Carousel from \"./Carousel\";\nimport Search from \"./Search\";\nimport PostCard from \"../Post/Main/Card\";\nimport Posts from \"./Posts\";\nimport Stories from \"./Stories\";\nimport CreatePost from \"../Post/Create/MainProfile\";\n// Contexts\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport Router from \"next/router\";\n// Utils\nimport { fetchAllUsers } from \"./utils/fetchAllUsers\";\nimport { fetchAllPosts } from \"./utils/fetchAllPosts\";\n// Hooks\nimport useWitdh from \"../../hooks/useWidth\";\nimport useValidate from \"../../hooks/useValidate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n\n    minHeight: \"100vh\",\n    marginTop: 150,\n    marginBottom: 75,\n    width: \"100vw\",\n    overflowX: \"hidden\",\n  },\n\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    margin: 0,\n  },\n\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    margin: 0,\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Playfair Display, serif\",\n    width: \"90vw\",\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n    fontFamily: \"Poppins, serif\",\n  },\n\n  button: {\n    marginTop: 45,\n    marginBottom: \"3rem\",\n    textTransform: \"none\",\n    paddingTop: 17,\n    paddingBottom: 17,\n    paddingLeft: 55,\n    paddingRight: 55,\n    fontSize: 21,\n    fontFamily: \"Poppins, serif\",\n  },\n  logo: {\n    width: 100,\n    height: \"auto\",\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\",\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\",\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\",\n  },\n  createPost: {\n    position: \"fixed\",\n    bottom: 40,\n    right: 40,\n    fontFamily: \"Noto Sans, sans serif\",\n    textTransform: \"none\",\n  },\n  addIcon: {},\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [openSnack, setOpenSnack] = useState(false);\n  const [content, setContent] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [display, setDisplay] = useState(true);\n  const [contentDisplay, setContentDisplay] = useState(\"stories\");\n  const { width, setWidth } = useWitdh();\n  const {\n    user,\n    setUser,\n    setAuthenticated,\n    authenticated,\n    setLoading,\n  } = useContext(UserContext);\n  const { setShowProfile } = useContext(ModalContext);\n\n  const { validateSession } = useValidate(\n    setUser,\n    setAuthenticated,\n    setLoading\n  );\n\n  // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n  }, []);\n\n  useEffect(() => {}, [display]);\n\n  useEffect(() => {\n    if (!user) {\n      validateSession();\n    }\n\n    if (user) {\n      setOpenSnack(true);\n    }\n\n    fetchAllUsers().then((response) => {\n      console.log(response);\n      setContent(response.data);\n    });\n    fetchAllPosts().then((response) => {\n      console.log(response);\n      setPosts(response.data.reverse());\n    });\n  }, [user]);\n\n  if (width > 950) {\n    return (\n      <div className={classes.root}>\n        <Snackbar open={openSnack} autoHideDuration={3000} onClose={() => {}}>\n          <MuiAlert\n            elevation={6}\n            variant=\"filled\"\n            onClose={() => setOpenSnack(false)}\n          >\n            Action Succesful\n          </MuiAlert>\n        </Snackbar>\n        <div className={classes.innerWrapper}>\n          <Search setDisplay={setDisplay} display={display} />\n          <ButtonGroup\n            style={{ display: display ? \"block\" : \"none\" }}\n            color=\"primary\"\n            aria-label=\"outlined secondary button group\"\n          >\n            <Button\n              style={{ textTransform: \"none\" }}\n              onClick={() => setContentDisplay(\"stories\")}\n            >\n              Stories\n            </Button>\n            <Button\n              style={{ textTransform: \"none\" }}\n              onClick={() => setContentDisplay(\"posts\")}\n            >\n              Posts\n            </Button>\n          </ButtonGroup>\n\n          <div className={classes.contentWrapper}>\n            {authenticated && contentDisplay === \"posts\" ? (\n              <CreatePost />\n            ) : null}\n            {contentDisplay === \"posts\" ? (\n              <Posts display={display} posts={posts} />\n            ) : null}\n\n            {/* {posts.map((post) => {\n            return <PostCard display={display} key={post._id} post={post} />;\n          })} */}\n\n            {/* {contentDisplay === \"search\" ? (\n            <Search setDisplay={setDisplay} />\n          ) : null} */}\n\n            {/* <Search setDisplay={setDisplay} /> */}\n\n            {contentDisplay === \"stories\" ? (\n              <Stories display={display} content={content} />\n            ) : null}\n          </div>\n        </div>\n\n        {user ? (\n          <Fab\n            onClick={() => setShowProfile(true)}\n            className={classes.createPost}\n            color=\"primary\"\n            aria-label=\"add\"\n          >\n            <AccountCircleIcon className={classes.addIcon} />\n          </Fab>\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <div className={classes.root}>\n        <div className={classes.innerWrapper}>\n          {content.map((user) => {\n            return <MobileCard key={user._id} story={user} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}