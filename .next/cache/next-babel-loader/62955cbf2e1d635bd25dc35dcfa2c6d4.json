{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"../../hooks/useForm\";\nimport Cookie from \"js-cookie\";\nimport { validateLogin } from \"./utils/validateLogin\";\nimport { authenticate } from \"../../utils/authentication/authenticate\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { formatEmail } from \"../../utils/validation/formatting\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 40,\n    minHeight: \"60vh\",\n    overflow: \"scroll\"\n  },\n  textField: {\n    width: \"17rem\",\n    margin: \"1rem\",\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    minHeight: \"10rem\"\n  },\n  header: {\n    textAlign: \"center\",\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 500\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"15rem\",\n    marginBottom: \"1rem\"\n  },\n  button: {\n    marginTop: 25,\n    marginBottom: 15,\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 25,\n    paddingRight: 25,\n    fontSize: 18,\n    fontFamily: \"Poppins, serif\"\n  },\n  signupButton: {\n    color: \"blue\",\n    textTransform: \"none\",\n    marginLeft: 5\n  }\n}));\n\nfunction LoginForm() {\n  const classes = useStyles();\n  const {\n    0: error,\n    1: setError\n  } = useState({\n    value: false,\n    message: \"\"\n  });\n  const {\n    setUser,\n    token,\n    setAuthenticated,\n    setToken,\n    authenticated\n  } = useContext(UserContext);\n  const {\n    setShowOnboard,\n    setShowLogin\n  } = useContext(ModalContext);\n  const {\n    errors,\n    values,\n    submitting,\n    setSubmitting,\n    handleChange,\n    handleErrors\n  } = useForm({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    location: \"\"\n  });\n  useEffect(() => {\n    // NOTE : reroute to `/home` upon sucessful login\n    if (token !== null && token !== undefined) {\n      Cookie.set(\"token\", token);\n    } else {\n      Cookie.remove(\"token\");\n    }\n  }, [token]); // TODO : Abstract `Loading` into a seperate component\n  // TODO : Abstract `Error` into a seperate component\n\n  if (error.value) {\n    return __jsx(\"p\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }\n    }, error.message);\n  } else {\n    return __jsx(\"form\", {\n      className: classes.root // onSubmit={async (e) => {\n      //   e.preventDefault();\n      //   // NOTE : With conditional logic, dependent on handleErros return value, async isn= neccessary since function must first\n      //   //        await the response of handleErrors before procceding onto next statement, etc ...\n      //   values.email = formatEmail(values.email);\n      //   if (await handleErrors(values, validateLogin)) {\n      //     authenticate(values).then((response) => {\n      //       if (response.status === \"success\") {\n      //         // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n      //         setToken(response.data.token);\n      //         setUser(response.data.user);\n      //         setAuthenticated(true);\n      //         setLoading(false);\n      //         Router.push(\"/home\");\n      //         setError({\n      //           value: false,\n      //           message: \"\",\n      //         });\n      //       } else {\n      //         setToken(null);\n      //         setAuthenticated(false);\n      //         setError({\n      //           value: true,\n      //           message: response.message,\n      //         });\n      //         setSubmitting(false);\n      //       }\n      //     });\n      //   }\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Welcome Back!\"), __jsx(\"div\", {\n      className: classes.innerWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, __jsx(TextField, {\n      className: classes.textField,\n      type: \"email\",\n      name: \"email\",\n      value: values.email,\n      label: \"Email\",\n      onChange: e => handleChange(e),\n      error: errors.email ? true : false,\n      helperText: errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }), __jsx(TextField, {\n      className: classes.textField,\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      label: \"Password\",\n      onChange: e => handleChange(e),\n      error: errors.password ? true : false,\n      helperText: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    })), __jsx(Button, {\n      className: classes.button,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: async () => {\n        // TODO : Find out why this needs to be wrapped in an async ?\n        // TODO : Determine if this design straetgy is okay -> using async function, even when no async is necessary ?\n        values.email = formatEmail(values.email);\n\n        if (await handleErrors(values, validateLogin)) {\n          //   setLoading(true);\n          authenticate(values).then(response => {\n            console.log(response);\n\n            if (response.status === \"success\") {\n              // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n              setToken(response.data.token);\n              setUser(response.data.user);\n              setAuthenticated(true);\n              setShowOnboard(false);\n              setShowLogin(false); //   setLoading(false);\n\n              Router.push(\"/\");\n              setError({\n                value: false,\n                message: \"\"\n              });\n            } else {\n              setToken(null);\n              setAuthenticated(false);\n              setError({\n                value: true,\n                message: response.message\n              }); //   setLoading(false);\n            }\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"Login\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, \"Don't have an account?\", __jsx(Button, {\n      onClick: () => {\n        setShowOnboard(true);\n      },\n      className: classes.signupButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"Create One\")));\n  }\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Form.js"],"names":["useForm","Cookie","validateLogin","authenticate","useContext","useState","useEffect","UserContext","ModalContext","formatEmail","Router","makeStyles","TextField","Button","useStyles","theme","root","display","flexDirection","alignItems","marginTop","minHeight","overflow","textField","width","margin","flexGrow","flexShrink","innerWrapper","justifyContent","header","textAlign","fontFamily","fontWeight","text","marginBottom","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","fontSize","signupButton","color","marginLeft","LoginForm","classes","error","setError","value","message","setUser","token","setAuthenticated","setToken","authenticated","setShowOnboard","setShowLogin","errors","values","submitting","setSubmitting","handleChange","handleErrors","email","password","firstname","lastname","location","undefined","set","remove","e","then","response","console","log","status","data","user","push"],"mappings":"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","sourcesContent":["import { useForm } from \"../../hooks/useForm\";\nimport Cookie from \"js-cookie\";\nimport { validateLogin } from \"./utils/validateLogin\";\nimport { authenticate } from \"../../utils/authentication/authenticate\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { formatEmail } from \"../../utils/validation/formatting\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 40,\n    minHeight: \"60vh\",\n    overflow: \"scroll\",\n  },\n  textField: {\n    width: \"17rem\",\n    margin: \"1rem\",\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    minHeight: \"10rem\",\n  },\n  header: {\n    textAlign: \"center\",\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 500,\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"15rem\",\n    marginBottom: \"1rem\",\n  },\n\n  button: {\n    marginTop: 25,\n    marginBottom: 15,\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 25,\n    paddingRight: 25,\n    fontSize: 18,\n    fontFamily: \"Poppins, serif\",\n  },\n\n  signupButton: {\n    color: \"blue\",\n    textTransform: \"none\",\n    marginLeft: 5,\n  },\n}));\n\nfunction LoginForm() {\n  const classes = useStyles();\n  const [error, setError] = useState({\n    value: false,\n    message: \"\",\n  });\n\n  const {\n    setUser,\n    token,\n    setAuthenticated,\n    setToken,\n    authenticated,\n  } = useContext(UserContext);\n\n  const { setShowOnboard, setShowLogin } = useContext(ModalContext);\n\n  const {\n    errors,\n    values,\n    submitting,\n    setSubmitting,\n    handleChange,\n    handleErrors,\n  } = useForm({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    location: \"\",\n  });\n\n  useEffect(() => {\n    // NOTE : reroute to `/home` upon sucessful login\n    if (token !== null && token !== undefined) {\n      Cookie.set(\"token\", token);\n    } else {\n      Cookie.remove(\"token\");\n    }\n  }, [token]);\n\n  // TODO : Abstract `Loading` into a seperate component\n\n  // TODO : Abstract `Error` into a seperate component\n\n  if (error.value) {\n    return <p className={classes.root}>{error.message}</p>;\n  } else {\n    return (\n      <form\n        className={classes.root}\n        // onSubmit={async (e) => {\n        //   e.preventDefault();\n\n        //   // NOTE : With conditional logic, dependent on handleErros return value, async isn= neccessary since function must first\n        //   //        await the response of handleErrors before procceding onto next statement, etc ...\n        //   values.email = formatEmail(values.email);\n        //   if (await handleErrors(values, validateLogin)) {\n        //     authenticate(values).then((response) => {\n        //       if (response.status === \"success\") {\n        //         // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n        //         setToken(response.data.token);\n        //         setUser(response.data.user);\n        //         setAuthenticated(true);\n        //         setLoading(false);\n        //         Router.push(\"/home\");\n        //         setError({\n        //           value: false,\n        //           message: \"\",\n        //         });\n        //       } else {\n        //         setToken(null);\n        //         setAuthenticated(false);\n        //         setError({\n        //           value: true,\n        //           message: response.message,\n        //         });\n        //         setSubmitting(false);\n        //       }\n        //     });\n        //   }\n        // }}\n      >\n        <h1 className={classes.header}>Welcome Back!</h1>\n        <div className={classes.innerWrapper}>\n          <TextField\n            className={classes.textField}\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            label=\"Email\"\n            onChange={(e) => handleChange(e)}\n            error={errors.email ? true : false}\n            helperText={errors.email}\n          />\n          <TextField\n            className={classes.textField}\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            label=\"Password\"\n            onChange={(e) => handleChange(e)}\n            error={errors.password ? true : false}\n            helperText={errors.password}\n          />\n        </div>\n\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={async () => {\n            // TODO : Find out why this needs to be wrapped in an async ?\n            // TODO : Determine if this design straetgy is okay -> using async function, even when no async is necessary ?\n            values.email = formatEmail(values.email);\n            if (await handleErrors(values, validateLogin)) {\n              //   setLoading(true);\n              authenticate(values).then((response) => {\n                console.log(response);\n                if (response.status === \"success\") {\n                  // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n                  setToken(response.data.token);\n                  setUser(response.data.user);\n                  setAuthenticated(true);\n                  setShowOnboard(false);\n                  setShowLogin(false);\n                  //   setLoading(false);\n                  Router.push(\"/\");\n                  setError({\n                    value: false,\n                    message: \"\",\n                  });\n                } else {\n                  setToken(null);\n                  setAuthenticated(false);\n                  setError({\n                    value: true,\n                    message: response.message,\n                  });\n                  //   setLoading(false);\n                }\n              });\n            }\n          }}\n        >\n          Login\n        </Button>\n        <p>\n          Don't have an account?\n          <Button\n            onClick={() => {\n              setShowOnboard(true);\n            }}\n            className={classes.signupButton}\n          >\n            Create One\n          </Button>\n        </p>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}