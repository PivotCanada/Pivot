{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Industry.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nvar industries = [{\n  name: \"Challenge\"\n}, {\n  name: \"Achievement\"\n}, {\n  name: \"Goal\"\n}, {\n  name: \"Wish\"\n}, {\n  name: \"Question\"\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    textField: {\n      width: \"17rem\",\n      margin: 0,\n      marginTop: \"2rem\"\n    }\n  };\n});\n\nfunction Industry(_ref) {\n  _s();\n\n  var _this = this;\n\n  var tags = _ref.tags,\n      setTags = _ref.setTags;\n  var classes = useStyles();\n  useEffect(function () {\n    console.log(tags);\n  }, [tags]);\n  return __jsx(Autocomplete, {\n    multiple: true,\n    defaultValue: [],\n    id: \"tags-standard\",\n    options: industries,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    onChange: function onChange(e, newValue) {\n      e.preventDefault();\n\n      if (newValue !== null) {\n        setTags(_toConsumableArray(newValue));\n      } else {\n        setTags([]);\n      }\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        className: classes.textField,\n        label: \"Tags\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Industry, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Industry;\nexport default Industry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Industry\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Industry.js"],"names":["useState","useEffect","makeStyles","TextField","Autocomplete","industries","name","useStyles","theme","textField","width","margin","marginTop","Industry","tags","setTags","classes","console","log","option","e","newValue","preventDefault","params"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,IAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE;AADR,CADiB,EAIjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAJiB,EAOjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAPiB,EAUjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAViB,EAajB;AACEA,EAAAA,IAAI,EAAE;AADR,CAbiB,CAAnB;AAkBA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAACM,KAAD;AAAA,SAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,SAAS,EAAE;AAHF;AAD4B,GAAZ;AAAA,CAAD,CAA5B;;AAQA,SAASC,QAAT,OAAqC;AAAA;;AAAA;;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACnC,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,SACE,MAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,OAAO,EAAET,UAJX;AAKE,IAAA,cAAc,EAAE,wBAACc,MAAD;AAAA,aAAYA,MAAM,CAACb,IAAnB;AAAA,KALlB;AAME,IAAA,QAAQ,EAAE,kBAACc,CAAD,EAAIC,QAAJ,EAAiB;AACzBD,MAAAA,CAAC,CAACE,cAAF;;AACA,UAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrBN,QAAAA,OAAO,oBAAKM,QAAL,EAAP;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAbH;AAcE,IAAA,WAAW,EAAE,qBAACQ,MAAD;AAAA,aACX,MAAC,SAAD,eAAeA,MAAf;AAAuB,QAAA,SAAS,EAAEP,OAAO,CAACP,SAA1C;AAAqD,QAAA,KAAK,EAAE,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADW;AAAA,KAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoBD;;GA3BQI,Q;UACSN,S;;;KADTM,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst industries = [\n  {\n    name: \"Challenge\",\n  },\n  {\n    name: \"Achievement\",\n  },\n  {\n    name: \"Goal\",\n  },\n  {\n    name: \"Wish\",\n  },\n  {\n    name: \"Question\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"17rem\",\n    margin: 0,\n    marginTop: \"2rem\",\n  },\n}));\n\nfunction Industry({ tags, setTags }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(tags);\n  }, [tags]);\n\n  return (\n    <Autocomplete\n      multiple\n      defaultValue={[]}\n      id=\"tags-standard\"\n      options={industries}\n      getOptionLabel={(option) => option.name}\n      onChange={(e, newValue) => {\n        e.preventDefault();\n        if (newValue !== null) {\n          setTags([...newValue]);\n        } else {\n          setTags([]);\n        }\n      }}\n      renderInput={(params) => (\n        <TextField {...params} className={classes.textField} label={\"Tags\"} />\n      )}\n    />\n  );\n}\n\nexport default Industry;\n"]},"metadata":{},"sourceType":"module"}