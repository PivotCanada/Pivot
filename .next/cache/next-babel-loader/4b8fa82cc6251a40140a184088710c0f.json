{"ast":null,"code":"import { isEmpty, validateEmail } from \"../../../utils/validation/formatting\";\nimport { exists } from \"../../../utils/validation/verifyUserExists\";\nexport const validateLogin = async values => {\n  let errors = {};\n  let valid = true;\n\n  if (isEmpty(values.email)) {\n    errors.email = \"Required\";\n    valid = false;\n  }\n\n  if (!isEmpty(values.email)) {\n    if (!validateEmail(values.email)) {\n      errors.email = \"This Email is Not Valid\";\n      valid = false;\n    } else {\n      await exists(values.email).then(response => {\n        if (!response.data) {\n          errors.email = \"User With This Email Does Not Exist\";\n          valid = false;\n        }\n      });\n    }\n  }\n\n  if (isEmpty(values.password)) {\n    errors.password = \"Required\";\n    valid = false;\n  }\n\n  return {\n    errors,\n    valid\n  };\n};","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/utils/validateLogin.js"],"names":["isEmpty","validateEmail","exists","validateLogin","values","errors","valid","email","then","response","data","password"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,sCAAvC;AACA,SAASC,MAAT,QAAuB,4CAAvB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AAC7C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAIN,OAAO,CAACI,MAAM,CAACG,KAAR,CAAX,EAA2B;AACzBF,IAAAA,MAAM,CAACE,KAAP,GAAe,UAAf;AACAD,IAAAA,KAAK,GAAG,KAAR;AACD;;AAED,MAAI,CAACN,OAAO,CAACI,MAAM,CAACG,KAAR,CAAZ,EAA4B;AAC1B,QAAI,CAACN,aAAa,CAACG,MAAM,CAACG,KAAR,CAAlB,EAAkC;AAChCF,MAAAA,MAAM,CAACE,KAAP,GAAe,yBAAf;AACAD,MAAAA,KAAK,GAAG,KAAR;AACD,KAHD,MAGO;AACL,YAAMJ,MAAM,CAACE,MAAM,CAACG,KAAR,CAAN,CAAqBC,IAArB,CAA2BC,QAAD,IAAc;AAC5C,YAAI,CAACA,QAAQ,CAACC,IAAd,EAAoB;AAClBL,UAAAA,MAAM,CAACE,KAAP,GAAe,qCAAf;AACAD,UAAAA,KAAK,GAAG,KAAR;AACD;AACF,OALK,CAAN;AAMD;AACF;;AAED,MAAIN,OAAO,CAACI,MAAM,CAACO,QAAR,CAAX,EAA8B;AAC5BN,IAAAA,MAAM,CAACM,QAAP,GAAkB,UAAlB;AACAL,IAAAA,KAAK,GAAG,KAAR;AACD;;AAED,SAAO;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACD,CA7BM","sourcesContent":["import { isEmpty, validateEmail } from \"../../../utils/validation/formatting\";\nimport { exists } from \"../../../utils/validation/verifyUserExists\";\n\nexport const validateLogin = async (values) => {\n  let errors = {};\n  let valid = true;\n\n  if (isEmpty(values.email)) {\n    errors.email = \"Required\";\n    valid = false;\n  }\n\n  if (!isEmpty(values.email)) {\n    if (!validateEmail(values.email)) {\n      errors.email = \"This Email is Not Valid\";\n      valid = false;\n    } else {\n      await exists(values.email).then((response) => {\n        if (!response.data) {\n          errors.email = \"User With This Email Does Not Exist\";\n          valid = false;\n        }\n      });\n    }\n  }\n\n  if (isEmpty(values.password)) {\n    errors.password = \"Required\";\n    valid = false;\n  }\n\n  return { errors, valid };\n};\n"]},"metadata":{},"sourceType":"module"}