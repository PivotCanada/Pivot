{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Industry.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nconst industries = [{\n  name: \"Challenge\"\n}, {\n  name: \"Achievement\"\n}, {\n  name: \"Goal\"\n}, {\n  name: \"Wish\"\n}, {\n  name: \"Question\"\n}];\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    width: \"17rem\",\n    margin: 0,\n    marginTop: \"2rem\"\n  }\n}));\n\nfunction Industry({\n  tags,\n  setTags\n}) {\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(tags);\n  }, [tags]);\n  return __jsx(Autocomplete, {\n    multiple: true,\n    defaultValue: [],\n    id: \"tags-standard\",\n    options: industries,\n    getOptionLabel: option => option.name,\n    onChange: (e, newValue) => {\n      e.preventDefault();\n\n      if (newValue !== null) {\n        setTags([...newValue]);\n      } else {\n        setTags([]);\n      }\n    },\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      className: classes.textField,\n      label: \"Tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Industry;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Industry.js"],"names":["useState","useEffect","makeStyles","TextField","Autocomplete","industries","name","useStyles","theme","textField","width","margin","marginTop","Industry","tags","setTags","classes","console","log","option","e","newValue","preventDefault","params"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE;AADR,CADiB,EAIjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAJiB,EAOjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAPiB,EAUjB;AACEA,EAAAA,IAAI,EAAE;AADR,CAViB,EAajB;AACEA,EAAAA,IAAI,EAAE;AADR,CAbiB,CAAnB;AAkBA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,SAAS,EAAE;AAHF;AAD4B,CAAZ,CAAD,CAA5B;;AAQA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAqC;AACnC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,SACE,MAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,OAAO,EAAET,UAJX;AAKE,IAAA,cAAc,EAAGc,MAAD,IAAYA,MAAM,CAACb,IALrC;AAME,IAAA,QAAQ,EAAE,CAACc,CAAD,EAAIC,QAAJ,KAAiB;AACzBD,MAAAA,CAAC,CAACE,cAAF;;AACA,UAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrBN,QAAAA,OAAO,CAAC,CAAC,GAAGM,QAAJ,CAAD,CAAP;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAbH;AAcE,IAAA,WAAW,EAAGQ,MAAD,IACX,MAAC,SAAD,eAAeA,MAAf;AAAuB,MAAA,SAAS,EAAEP,OAAO,CAACP,SAA1C;AAAqD,MAAA,KAAK,EAAE,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoBD;;AAED,eAAeI,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst industries = [\n  {\n    name: \"Challenge\",\n  },\n  {\n    name: \"Achievement\",\n  },\n  {\n    name: \"Goal\",\n  },\n  {\n    name: \"Wish\",\n  },\n  {\n    name: \"Question\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"17rem\",\n    margin: 0,\n    marginTop: \"2rem\",\n  },\n}));\n\nfunction Industry({ tags, setTags }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(tags);\n  }, [tags]);\n\n  return (\n    <Autocomplete\n      multiple\n      defaultValue={[]}\n      id=\"tags-standard\"\n      options={industries}\n      getOptionLabel={(option) => option.name}\n      onChange={(e, newValue) => {\n        e.preventDefault();\n        if (newValue !== null) {\n          setTags([...newValue]);\n        } else {\n          setTags([]);\n        }\n      }}\n      renderInput={(params) => (\n        <TextField {...params} className={classes.textField} label={\"Tags\"} />\n      )}\n    />\n  );\n}\n\nexport default Industry;\n"]},"metadata":{},"sourceType":"module"}