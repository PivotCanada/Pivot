{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Main.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext, useState } from \"react\";\nimport Router from \"next/router\"; // Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; // Components\n\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\"; // Contexts\n\nimport { UserContext } from \"../../../contexts/UserContext\"; // Utils\n\nimport { editPost } from \"./utils/editPost\";\nimport { deletePost } from \"./utils/deletePost\"; // Hooks\n\nimport useWidth from \"../../../hooks/useWidth\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 20,\n    marginBottom: 75,\n    width: \"100%\",\n    overflowX: \"hidden\"\n  },\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1,\n    fontFamily: \"Open Sans, sans serif\"\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Open Sans, sans serif\",\n    width: \"90vw\"\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n    fontFamily: \"Open Sans, sans serif\"\n  },\n  button: {\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: 12,\n    width: \"45%\",\n    fontFamily: \"Open Sans, sans serif\"\n  },\n  logo: {\n    width: 100,\n    height: \"auto\"\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\"\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\"\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\"\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    marginTop: 35\n  }\n}));\n\nconst Main = ({\n  handleClose,\n  post\n}) => {\n  const classes = useStyles();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(post.text);\n  const {\n    0: tags,\n    1: setTags\n  } = useState(post.tags);\n  const {\n    user\n  } = useContext(UserContext);\n  console.log(post);\n\n  const onSubmit = async text => {\n    setLoading(true);\n    let id = post._id;\n    let update = {\n      text: text,\n      author: {\n        _id: user._id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        photo: user.photo\n      },\n      likes: post.likes,\n      tags: tags\n    };\n    await editPost(update, id).then(response => {\n      console.log(response);\n\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  const onDelete = async () => {\n    setLoading(true);\n    let id = post._id;\n    await deletePost(id).then(response => {\n      console.log(response);\n\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  }; // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n  //   useEffect(() => {\n  //     console.log(user);\n  //   }, [width]);\n\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.innerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), __jsx(TextField, {\n    multiline: true,\n    rows: 4,\n    className: classes.textField,\n    variant: \"outlined\",\n    type: \"text\",\n    label: \"Post\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), __jsx(Industry, {\n    tags: tags,\n    setTags: setTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    disabled: text.length === 0,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => onSubmit(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Update\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => onDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Delete\"))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Edit/Main.js"],"names":["useEffect","useContext","useState","Router","makeStyles","TextField","Button","UserCard","Industry","UserContext","editPost","deletePost","useWidth","useStyles","theme","root","display","flexDirection","alignItems","marginTop","marginBottom","width","overflowX","textField","flexGrow","flexShrink","fontFamily","innerWrapper","justifyContent","backgroundColor","borderRadius","header","textAlign","fontSize","fontWeight","text","margin","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","logo","height","nfb","cardContainer","info","color","buttonWrapper","Main","handleClose","post","classes","loading","setLoading","setText","tags","setTags","user","console","log","onSubmit","id","_id","update","author","firstname","lastname","photo","likes","then","response","status","reload","onDelete","e","target","value","length"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\nimport Router from \"next/router\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n// Components\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\";\n// Contexts\nimport { UserContext } from \"../../../contexts/UserContext\";\n// Utils\nimport { editPost } from \"./utils/editPost\";\nimport { deletePost } from \"./utils/deletePost\";\n\n// Hooks\nimport useWidth from \"../../../hooks/useWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n\n    marginTop: 20,\n    marginBottom: 75,\n    width: \"100%\",\n    overflowX: \"hidden\",\n  },\n\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1,\n    fontFamily: \"Open Sans, sans serif\",\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Open Sans, sans serif\",\n    width: \"90vw\",\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n\n    fontFamily: \"Open Sans, sans serif\",\n  },\n\n  button: {\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: 12,\n    width: \"45%\",\n    fontFamily: \"Open Sans, sans serif\",\n  },\n  logo: {\n    width: 100,\n    height: \"auto\",\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\",\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\",\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\",\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    marginTop: 35,\n  },\n}));\n\nconst Main = ({ handleClose, post }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [text, setText] = useState(post.text);\n  const [tags, setTags] = useState(post.tags);\n  const { user } = useContext(UserContext);\n\n  console.log(post);\n\n  const onSubmit = async (text) => {\n    setLoading(true);\n\n    let id = post._id;\n\n    let update = {\n      text: text,\n      author: {\n        _id: user._id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        photo: user.photo,\n      },\n      likes: post.likes,\n      tags: tags,\n    };\n\n    await editPost(update, id).then((response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  const onDelete = async () => {\n    setLoading(true);\n\n    let id = post._id;\n\n    await deletePost(id).then((response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n\n  //   useEffect(() => {\n  //     console.log(user);\n  //   }, [width]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerWrapper}>\n        <UserCard user={user} />\n        <TextField\n          multiline\n          rows={4}\n          className={classes.textField}\n          variant=\"outlined\"\n          type=\"text\"\n          label=\"Post\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <Industry tags={tags} setTags={setTags} />\n        <div className={classes.buttonWrapper}>\n          <Button\n            disabled={text.length === 0}\n            variant={\"contained\"}\n            color={\"primary\"}\n            className={classes.button}\n            onClick={() => onSubmit(text)}\n          >\n            Update\n          </Button>\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            className={classes.button}\n            onClick={() => onDelete()}\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}