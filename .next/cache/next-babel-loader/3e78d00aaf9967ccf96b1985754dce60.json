{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Main/Card.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from \"react\"; // Material UI\n\nimport Card from \"@material-ui/core/Card\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { IconButton, Fab } from \"@material-ui/core\"; // Components\n\nimport Modal from \"../Edit/Modal\"; // Contexts\n\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { set } from \"js-cookie\"; // Utils\n\nimport { editPost } from \"./utils/editPost\";\nimport { like } from \"./utils/like\";\nimport { unlike } from \"./utils/unlike\";\n\nconst format = text => {\n  let arr = text.split(\" \");\n  let format = \"\";\n\n  if (arr.length > 45) {\n    let i = 0;\n\n    while (i < 45) {\n      if (i === 44) {\n        format += arr[i] + \"...\";\n        ++i;\n      } else {\n        format += arr[i] + \" \";\n        ++i;\n      }\n    }\n  }\n\n  return format;\n};\n\nfunction Preview({\n  post,\n  display\n}) {\n  const useStyles = makeStyles(theme => ({\n    card: {\n      display: display ? \"flex\" : \"none\",\n      flexDirection: \"column\",\n      borderRadius: 3,\n      border: \"1px solid #cccccc\",\n      width: \"100%\",\n      maxWidth: 500,\n      padding: 20,\n      marginBottom: 25\n    },\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\",\n      height: \"100%\",\n      flexWrap: \"wrap\",\n      padding: 0\n    },\n    imageContainer: {\n      display: \"flex\",\n      width: 50,\n      height: 50,\n      alignItems: \"center\"\n    },\n    image: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: \"50%\"\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 0,\n      margin: 0,\n      marginLeft: 10,\n      width: \"70%\"\n    },\n    contentInnerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      width: \"500px\"\n    },\n    title: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"38px\",\n      textAlign: \"left\",\n      fontWeight: 700,\n      margin: 0,\n      padding: 0,\n      width: \"90%\"\n    },\n    details: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: \"80%\",\n      marginLeft: 0\n    },\n    author: {\n      color: \"black\",\n      fontFamily: \"Open Sans, sans-serif\",\n      fontWeight: 700,\n      fontSize: 14,\n      padding: 0,\n      margin: 0,\n      width: \"100%\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 5\n    },\n    authorWrapper: {\n      padding: 0,\n      display: \"flex\",\n      height: 50,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      margin: 0\n    },\n    date: {\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      margin: 0\n    },\n    description: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Open Sans, sans serif\",\n      fontWeight: 300,\n      fontSize: 14,\n      width: \"100%\",\n      margin: 0\n    },\n    chip: {\n      margin: 0,\n      marginRight: 5,\n      fontFamily: \"Open Sans, sans serif\",\n      fontWeight: 700,\n      fontSize: 10,\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\"\n      }\n    },\n    chipArray: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: \"100%\",\n      marginTop: 15\n    },\n    button: {\n      padding: 3,\n      width: 100,\n      textTransform: \"none\"\n    },\n    arrow: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    arrowIcon: {},\n    buttonsWrapper: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: 95,\n      marginTop: 25\n    }\n  }));\n  console.log(post);\n\n  const checkFavourited = (user, post) => {\n    if (user === null) {\n      return null;\n    }\n\n    let val = false;\n    post.likes.forEach(like => {\n      if (like.user_id === user._id) {\n        val = true;\n      }\n    });\n    return val;\n  };\n\n  const classes = useStyles();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: fav,\n    1: setFav\n  } = useState(checkFavourited(user, post));\n  const author = post.author;\n  const def = \"https://images.unsplash.com/photo-1493397212122-2b85dda8106b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\";\n\n  const removeLike = async user => {\n    let id = post._id;\n    let arr = post.likes.filter(like => {\n      like.user_id !== user._id;\n    });\n    let update = {\n      text: post.text,\n      author: post.author,\n      tags: post.tags,\n      likes: arr\n    };\n    let data = {\n      post: post\n    };\n    await editPost(update, id).then(async response => {\n      console.log(response);\n\n      if (response.status === \"success\") {\n        await unlike(data, user._id).then(response => {\n          console.log(response);\n\n          if (response.status === \"success\") {\n            setFav(false);\n          }\n        });\n      } else {}\n    });\n  };\n\n  const addLike = async user => {\n    let id = post._id;\n    let user_info = {\n      user_id: user._id,\n      firstname: user.firstname,\n      lastname: user.lastname\n    };\n    let arr = post.likes;\n    arr.push(user_info);\n    let update = {\n      text: post.text,\n      author: post.author,\n      tags: post.tags,\n      likes: arr\n    };\n    let data = {\n      post: post\n    };\n    await editPost(update, id).then(async response => {\n      console.log(response);\n\n      if (response.status === \"success\") {\n        await like(data, user._id).then(response => {\n          console.log(response);\n\n          if (response.status === \"success\") {\n            setFav(true);\n          }\n        });\n      } else {}\n    });\n  };\n\n  if (post) {\n    if (user) {\n      return __jsx(\"div\", {\n        className: classes.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, __jsx(Modal, {\n        open: open,\n        setOpen: setOpen,\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: classes.innerWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: classes.imageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        className: classes.image,\n        src: author.photo ? author.photo : def,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        className: classes.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }\n      }, author.firstname, \" \", author.lastname), __jsx(\"p\", {\n        className: classes.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, post.text), __jsx(\"div\", {\n        className: classes.chipArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      }, post.tags.map(tag => {\n        return __jsx(\"p\", {\n          key: tag.name,\n          className: classes.chip,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 21\n          }\n        }, tag.name);\n      })), __jsx(\"div\", {\n        className: classes.buttonsWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }\n      }, fav ? __jsx(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => removeLike(user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }\n      }, __jsx(FavoriteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      })) : __jsx(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => addLike(user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, __jsx(FavoriteBorderIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      })), user._id === author._id ? __jsx(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => setOpen(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 19\n        }\n      }, __jsx(MoreHorizIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      })) : null))));\n    }\n\n    if (user === null) {\n      return __jsx(\"div\", {\n        className: classes.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }, __jsx(Modal, {\n        open: open,\n        setOpen: setOpen,\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: classes.innerWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: classes.imageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        className: classes.image,\n        src: author.photo ? author.photo : def,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        className: classes.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }\n      }, author.firstname, \" \", author.lastname), __jsx(\"p\", {\n        className: classes.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }\n      }, post.text), __jsx(\"div\", {\n        className: classes.chipArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }\n      }, post.tags.map(tag => {\n        return __jsx(\"p\", {\n          key: tag.name,\n          className: classes.chip,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }\n        }, tag.name);\n      })), __jsx(\"div\", {\n        className: classes.buttonsWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, __jsx(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, __jsx(FavoriteBorderIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }\n}\n\nexport default Preview;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Main/Card.js"],"names":["useState","useEffect","useContext","Card","Chip","CardContent","Button","makeStyles","FavoriteIcon","FavoriteBorderIcon","MoreHorizIcon","PublicIcon","RoomIcon","IconButton","Fab","Modal","UserContext","set","editPost","like","unlike","format","text","arr","split","length","i","Preview","post","display","useStyles","theme","card","flexDirection","borderRadius","border","width","maxWidth","padding","marginBottom","innerWrapper","height","flexWrap","imageContainer","alignItems","image","objectFit","content","justifyContent","margin","marginLeft","contentInnerWrapper","title","textDecoration","color","fontSize","textAlign","fontWeight","details","author","fontFamily","marginTop","authorWrapper","date","description","chip","marginRight","opacity","cursor","chipArray","button","textTransform","arrow","arrowIcon","buttonsWrapper","console","log","checkFavourited","user","val","likes","forEach","user_id","_id","classes","open","setOpen","fav","setFav","def","removeLike","id","filter","update","tags","data","then","response","status","addLike","user_info","firstname","lastname","push","photo","map","tag","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,mBAAhC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,GAAT,QAAoB,WAApB,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,MAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAV;AACA,MAAIH,MAAM,GAAG,EAAb;;AAEA,MAAIE,GAAG,CAACE,MAAJ,GAAa,EAAjB,EAAqB;AACnB,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAG,EAAX,EAAe;AACb,UAAIA,CAAC,KAAK,EAAV,EAAc;AACZL,QAAAA,MAAM,IAAIE,GAAG,CAACG,CAAD,CAAH,GAAS,KAAnB;AACA,UAAEA,CAAF;AACD,OAHD,MAGO;AACLL,QAAAA,MAAM,IAAIE,GAAG,CAACG,CAAD,CAAH,GAAS,GAAnB;AACA,UAAEA,CAAF;AACD;AACF;AACF;;AAED,SAAOL,MAAP;AACD,CAlBD;;AAoBA,SAASM,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjB,EAAoC;AAClC,QAAMC,SAAS,GAAGvB,UAAU,CAAEwB,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAEA,OAAO,GAAG,MAAH,GAAY,MADxB;AAEJI,MAAAA,aAAa,EAAE,QAFX;AAGJC,MAAAA,YAAY,EAAE,CAHV;AAIJC,MAAAA,MAAM,EAAE,mBAJJ;AAKJC,MAAAA,KAAK,EAAE,MALH;AAMJC,MAAAA,QAAQ,EAAE,GANN;AAQJC,MAAAA,OAAO,EAAE,EARL;AASJC,MAAAA,YAAY,EAAE;AATV,KADiC;AAavCC,IAAAA,YAAY,EAAE;AACZX,MAAAA,OAAO,EAAE,MADG;AAEZI,MAAAA,aAAa,EAAE,KAFH;AAGZG,MAAAA,KAAK,EAAE,MAHK;AAIZK,MAAAA,MAAM,EAAE,MAJI;AAKZC,MAAAA,QAAQ,EAAE,MALE;AAMZJ,MAAAA,OAAO,EAAE;AANG,KAbyB;AAqBvCK,IAAAA,cAAc,EAAE;AACdd,MAAAA,OAAO,EAAE,MADK;AAEdO,MAAAA,KAAK,EAAE,EAFO;AAGdK,MAAAA,MAAM,EAAE,EAHM;AAIdG,MAAAA,UAAU,EAAE;AAJE,KArBuB;AA2BvCC,IAAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EAAE,MADF;AAELK,MAAAA,MAAM,EAAE,MAFH;AAGLK,MAAAA,SAAS,EAAE,OAHN;AAILZ,MAAAA,YAAY,EAAE;AAJT,KA3BgC;AAkCvCa,IAAAA,OAAO,EAAE;AACPlB,MAAAA,OAAO,EAAE,MADF;AAEPI,MAAAA,aAAa,EAAE,QAFR;AAGPe,MAAAA,cAAc,EAAE,QAHT;AAIPV,MAAAA,OAAO,EAAE,CAJF;AAKPW,MAAAA,MAAM,EAAE,CALD;AAMPC,MAAAA,UAAU,EAAE,EANL;AAOPd,MAAAA,KAAK,EAAE;AAPA,KAlC8B;AA4CvCe,IAAAA,mBAAmB,EAAE;AACnBtB,MAAAA,OAAO,EAAE,MADU;AAEnBI,MAAAA,aAAa,EAAE,QAFI;AAGnBe,MAAAA,cAAc,EAAE,YAHG;AAInBZ,MAAAA,KAAK,EAAE;AAJY,KA5CkB;AAmDvCgB,IAAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,MADX;AAELC,MAAAA,KAAK,EAAE,OAFF;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,SAAS,EAAE,MALN;AAMLC,MAAAA,UAAU,EAAE,GANP;AAOLR,MAAAA,MAAM,EAAE,CAPH;AAQLX,MAAAA,OAAO,EAAE,CARJ;AASLF,MAAAA,KAAK,EAAE;AATF,KAnDgC;AA+DvCsB,IAAAA,OAAO,EAAE;AACP7B,MAAAA,OAAO,EAAE,MADF;AAEPI,MAAAA,aAAa,EAAE,KAFR;AAGPe,MAAAA,cAAc,EAAE,eAHT;AAIPJ,MAAAA,UAAU,EAAE,QAJL;AAKPR,MAAAA,KAAK,EAAE,KALA;AAOPc,MAAAA,UAAU,EAAE;AAPL,KA/D8B;AAwEvCS,IAAAA,MAAM,EAAE;AACNL,MAAAA,KAAK,EAAE,OADD;AAENM,MAAAA,UAAU,EAAE,uBAFN;AAGNH,MAAAA,UAAU,EAAE,GAHN;AAINF,MAAAA,QAAQ,EAAE,EAJJ;AAKNjB,MAAAA,OAAO,EAAE,CALH;AAMNW,MAAAA,MAAM,EAAE,CANF;AAONb,MAAAA,KAAK,EAAE,MAPD;AAQNoB,MAAAA,SAAS,EAAE,MARL;AASNjB,MAAAA,YAAY,EAAE,EATR;AAUNsB,MAAAA,SAAS,EAAE;AAVL,KAxE+B;AAoFvCC,IAAAA,aAAa,EAAE;AACbxB,MAAAA,OAAO,EAAE,CADI;AAEbT,MAAAA,OAAO,EAAE,MAFI;AAGbY,MAAAA,MAAM,EAAE,EAHK;AAIbG,MAAAA,UAAU,EAAE,QAJC;AAKbI,MAAAA,cAAc,EAAE,QALH;AAObZ,MAAAA,KAAK,EAAE,MAPM;AAQba,MAAAA,MAAM,EAAE;AARK,KApFwB;AA8FvCc,IAAAA,IAAI,EAAE;AACJT,MAAAA,KAAK,EAAE,OADH;AAEJM,MAAAA,UAAU,EAAE,yBAFR;AAGJH,MAAAA,UAAU,EAAE,GAHR;AAIJF,MAAAA,QAAQ,EAAE,MAJN;AAKJN,MAAAA,MAAM,EAAE;AALJ,KA9FiC;AAqGvCe,IAAAA,WAAW,EAAE;AACXX,MAAAA,cAAc,EAAE,MADL;AAEXC,MAAAA,KAAK,EAAE,OAFI;AAGXM,MAAAA,UAAU,EAAE,uBAHD;AAIXH,MAAAA,UAAU,EAAE,GAJD;AAKXF,MAAAA,QAAQ,EAAE,EALC;AAOXnB,MAAAA,KAAK,EAAE,MAPI;AAQXa,MAAAA,MAAM,EAAE;AARG,KArG0B;AA+GvCgB,IAAAA,IAAI,EAAE;AACJhB,MAAAA,MAAM,EAAE,CADJ;AAEJiB,MAAAA,WAAW,EAAE,CAFT;AAGJN,MAAAA,UAAU,EAAE,uBAHR;AAIJH,MAAAA,UAAU,EAAE,GAJR;AAKJF,MAAAA,QAAQ,EAAE,EALN;AAMJ,iBAAW;AACTY,QAAAA,OAAO,EAAE,GADA;AAETC,QAAAA,MAAM,EAAE;AAFC;AANP,KA/GiC;AA0HvCC,IAAAA,SAAS,EAAE;AACTxC,MAAAA,OAAO,EAAE,MADA;AAETa,MAAAA,QAAQ,EAAE,MAFD;AAGTN,MAAAA,KAAK,EAAE,MAHE;AAITyB,MAAAA,SAAS,EAAE;AAJF,KA1H4B;AAgIvCS,IAAAA,MAAM,EAAE;AACNhC,MAAAA,OAAO,EAAE,CADH;AAENF,MAAAA,KAAK,EAAE,GAFD;AAINmC,MAAAA,aAAa,EAAE;AAJT,KAhI+B;AAsIvCC,IAAAA,KAAK,EAAE;AACL3C,MAAAA,OAAO,EAAE,MADJ;AAELe,MAAAA,UAAU,EAAE;AAFP,KAtIgC;AA0IvC6B,IAAAA,SAAS,EAAE,EA1I4B;AA4IvCC,IAAAA,cAAc,EAAE;AACd7C,MAAAA,OAAO,EAAE,MADK;AAEdmB,MAAAA,cAAc,EAAE,eAFF;AAGdZ,MAAAA,KAAK,EAAE,EAHO;AAIdyB,MAAAA,SAAS,EAAE;AAJG;AA5IuB,GAAZ,CAAD,CAA5B;AAoJAc,EAAAA,OAAO,CAACC,GAAR,CAAYhD,IAAZ;;AAEA,QAAMiD,eAAe,GAAG,CAACC,IAAD,EAAOlD,IAAP,KAAgB;AACtC,QAAIkD,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAIC,GAAG,GAAG,KAAV;AAEAnD,IAAAA,IAAI,CAACoD,KAAL,CAAWC,OAAX,CAAoB9D,IAAD,IAAU;AAC3B,UAAIA,IAAI,CAAC+D,OAAL,KAAiBJ,IAAI,CAACK,GAA1B,EAA+B;AAC7BJ,QAAAA,GAAG,GAAG,IAAN;AACD;AACF,KAJD;AAMA,WAAOA,GAAP;AACD,GAdD;;AAgBA,QAAMK,OAAO,GAAGtD,SAAS,EAAzB;AACA,QAAM;AAAEgD,IAAAA;AAAF,MAAW5E,UAAU,CAACc,WAAD,CAA3B;AACA,QAAM;AAAA,OAACqE,IAAD;AAAA,OAAOC;AAAP,MAAkBtF,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACuF,GAAD;AAAA,OAAMC;AAAN,MAAgBxF,QAAQ,CAAC6E,eAAe,CAACC,IAAD,EAAOlD,IAAP,CAAhB,CAA9B;AAEA,QAAM+B,MAAM,GAAG/B,IAAI,CAAC+B,MAApB;AACA,QAAM8B,GAAG,GACP,wIADF;;AAGA,QAAMC,UAAU,GAAG,MAAOZ,IAAP,IAAgB;AACjC,QAAIa,EAAE,GAAG/D,IAAI,CAACuD,GAAd;AAEA,QAAI5D,GAAG,GAAGK,IAAI,CAACoD,KAAL,CAAWY,MAAX,CAAmBzE,IAAD,IAAU;AACpCA,MAAAA,IAAI,CAAC+D,OAAL,KAAiBJ,IAAI,CAACK,GAAtB;AACD,KAFS,CAAV;AAIA,QAAIU,MAAM,GAAG;AACXvE,MAAAA,IAAI,EAAEM,IAAI,CAACN,IADA;AAEXqC,MAAAA,MAAM,EAAE/B,IAAI,CAAC+B,MAFF;AAGXmC,MAAAA,IAAI,EAAElE,IAAI,CAACkE,IAHA;AAIXd,MAAAA,KAAK,EAAEzD;AAJI,KAAb;AAOA,QAAIwE,IAAI,GAAG;AACTnE,MAAAA,IAAI,EAAEA;AADG,KAAX;AAIA,UAAMV,QAAQ,CAAC2E,MAAD,EAASF,EAAT,CAAR,CAAqBK,IAArB,CAA0B,MAAOC,QAAP,IAAoB;AAClDtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;;AACA,UAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjC,cAAM9E,MAAM,CAAC2E,IAAD,EAAOjB,IAAI,CAACK,GAAZ,CAAN,CAAuBa,IAAvB,CAA6BC,QAAD,IAAc;AAC9CtB,UAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;;AACA,cAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjCV,YAAAA,MAAM,CAAC,KAAD,CAAN;AACD;AACF,SALK,CAAN;AAMD,OAPD,MAOO,CACN;AACF,KAXK,CAAN;AAYD,GA9BD;;AAgCA,QAAMW,OAAO,GAAG,MAAOrB,IAAP,IAAgB;AAC9B,QAAIa,EAAE,GAAG/D,IAAI,CAACuD,GAAd;AAEA,QAAIiB,SAAS,GAAG;AACdlB,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADA;AAEdkB,MAAAA,SAAS,EAAEvB,IAAI,CAACuB,SAFF;AAGdC,MAAAA,QAAQ,EAAExB,IAAI,CAACwB;AAHD,KAAhB;AAMA,QAAI/E,GAAG,GAAGK,IAAI,CAACoD,KAAf;AAEAzD,IAAAA,GAAG,CAACgF,IAAJ,CAASH,SAAT;AAEA,QAAIP,MAAM,GAAG;AACXvE,MAAAA,IAAI,EAAEM,IAAI,CAACN,IADA;AAEXqC,MAAAA,MAAM,EAAE/B,IAAI,CAAC+B,MAFF;AAGXmC,MAAAA,IAAI,EAAElE,IAAI,CAACkE,IAHA;AAIXd,MAAAA,KAAK,EAAEzD;AAJI,KAAb;AAOA,QAAIwE,IAAI,GAAG;AACTnE,MAAAA,IAAI,EAAEA;AADG,KAAX;AAIA,UAAMV,QAAQ,CAAC2E,MAAD,EAASF,EAAT,CAAR,CAAqBK,IAArB,CAA0B,MAAOC,QAAP,IAAoB;AAClDtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;;AACA,UAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjC,cAAM/E,IAAI,CAAC4E,IAAD,EAAOjB,IAAI,CAACK,GAAZ,CAAJ,CAAqBa,IAArB,CAA2BC,QAAD,IAAc;AAC5CtB,UAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;;AACA,cAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjCV,YAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,SALK,CAAN;AAMD,OAPD,MAOO,CACN;AACF,KAXK,CAAN;AAYD,GApCD;;AAsCA,MAAI5D,IAAJ,EAAU;AACR,QAAIkD,IAAJ,EAAU;AACR,aACE;AAAK,QAAA,SAAS,EAAEM,OAAO,CAACpD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEqD,IAAb;AAAmB,QAAA,OAAO,EAAEC,OAA5B;AAAqC,QAAA,IAAI,EAAE1D,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAEwD,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE4C,OAAO,CAACzC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEyC,OAAO,CAACvC,KADrB;AAEE,QAAA,GAAG,EAAEc,MAAM,CAAC6C,KAAP,GAAe7C,MAAM,CAAC6C,KAAtB,GAA8Bf,GAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAOE;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACrC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,SAAS,EAAEqC,OAAO,CAACzB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAAC0C,SADV,OACsB1C,MAAM,CAAC2C,QAD7B,CAFF,EAME;AAAG,QAAA,SAAS,EAAElB,OAAO,CAACpB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCpC,IAAI,CAACN,IAAzC,CANF,EAOE;AAAK,QAAA,SAAS,EAAE8D,OAAO,CAACf,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGzC,IAAI,CAACkE,IAAL,CAAUW,GAAV,CAAeC,GAAD,IAAS;AACtB,eACE;AAAG,UAAA,GAAG,EAAEA,GAAG,CAACC,IAAZ;AAAkB,UAAA,SAAS,EAAEvB,OAAO,CAACnB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGyC,GAAG,CAACC,IADP,CADF;AAKD,OANA,CADH,CAPF,EAgBE;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACV,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,GAAG,GACF,MAAC,GAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAMG,UAAU,CAACZ,IAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADE,GASF,MAAC,GAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAMqB,OAAO,CAACrB,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAVJ,EAkBGA,IAAI,CAACK,GAAL,KAAaxB,MAAM,CAACwB,GAApB,GACC,MAAC,GAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAMG,OAAO,CAAC,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADD,GAQG,IA1BN,CAhBF,CAPF,CAHF,CADF;AA2DD;;AACD,QAAIR,IAAI,KAAK,IAAb,EAAmB;AACjB,aACE;AAAK,QAAA,SAAS,EAAEM,OAAO,CAACpD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEqD,IAAb;AAAmB,QAAA,OAAO,EAAEC,OAA5B;AAAqC,QAAA,IAAI,EAAE1D,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAEwD,OAAO,CAAC5C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE4C,OAAO,CAACzC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEyC,OAAO,CAACvC,KADrB;AAEE,QAAA,GAAG,EAAEc,MAAM,CAAC6C,KAAP,GAAe7C,MAAM,CAAC6C,KAAtB,GAA8Bf,GAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAOE;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACrC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,SAAS,EAAEqC,OAAO,CAACzB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAAC0C,SADV,OACsB1C,MAAM,CAAC2C,QAD7B,CAFF,EAME;AAAG,QAAA,SAAS,EAAElB,OAAO,CAACpB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCpC,IAAI,CAACN,IAAzC,CANF,EAOE;AAAK,QAAA,SAAS,EAAE8D,OAAO,CAACf,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGzC,IAAI,CAACkE,IAAL,CAAUW,GAAV,CAAeC,GAAD,IAAS;AACtB,eACE;AAAG,UAAA,GAAG,EAAEA,GAAG,CAACC,IAAZ;AAAkB,UAAA,SAAS,EAAEvB,OAAO,CAACnB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGyC,GAAG,CAACC,IADP,CADF;AAKD,OANA,CADH,CAPF,EAgBE;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACV,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAhBF,CAPF,CAHF,CADF;AAoCD;AACF;AACF;;AAED,eAAe/C,OAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\n// Material UI\nimport Card from \"@material-ui/core/Card\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { IconButton, Fab } from \"@material-ui/core\";\n\n// Components\nimport Modal from \"../Edit/Modal\";\n// Contexts\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { set } from \"js-cookie\";\n// Utils\nimport { editPost } from \"./utils/editPost\";\nimport { like } from \"./utils/like\";\nimport { unlike } from \"./utils/unlike\";\n\nconst format = (text) => {\n  let arr = text.split(\" \");\n  let format = \"\";\n\n  if (arr.length > 45) {\n    let i = 0;\n    while (i < 45) {\n      if (i === 44) {\n        format += arr[i] + \"...\";\n        ++i;\n      } else {\n        format += arr[i] + \" \";\n        ++i;\n      }\n    }\n  }\n\n  return format;\n};\n\nfunction Preview({ post, display }) {\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      display: display ? \"flex\" : \"none\",\n      flexDirection: \"column\",\n      borderRadius: 3,\n      border: \"1px solid #cccccc\",\n      width: \"100%\",\n      maxWidth: 500,\n\n      padding: 20,\n      marginBottom: 25,\n    },\n\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\",\n      height: \"100%\",\n      flexWrap: \"wrap\",\n      padding: 0,\n    },\n    imageContainer: {\n      display: \"flex\",\n      width: 50,\n      height: 50,\n      alignItems: \"center\",\n    },\n    image: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: \"50%\",\n    },\n\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 0,\n      margin: 0,\n      marginLeft: 10,\n      width: \"70%\",\n    },\n\n    contentInnerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      width: \"500px\",\n    },\n\n    title: {\n      textDecoration: \"none\",\n      color: \"black\",\n\n      fontSize: \"38px\",\n      textAlign: \"left\",\n      fontWeight: 700,\n      margin: 0,\n      padding: 0,\n      width: \"90%\",\n    },\n\n    details: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: \"80%\",\n\n      marginLeft: 0,\n    },\n    author: {\n      color: \"black\",\n      fontFamily: \"Open Sans, sans-serif\",\n      fontWeight: 700,\n      fontSize: 14,\n      padding: 0,\n      margin: 0,\n      width: \"100%\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 5,\n    },\n    authorWrapper: {\n      padding: 0,\n      display: \"flex\",\n      height: 50,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n\n      width: \"100%\",\n      margin: 0,\n    },\n    date: {\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      margin: 0,\n    },\n    description: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Open Sans, sans serif\",\n      fontWeight: 300,\n      fontSize: 14,\n\n      width: \"100%\",\n      margin: 0,\n    },\n    chip: {\n      margin: 0,\n      marginRight: 5,\n      fontFamily: \"Open Sans, sans serif\",\n      fontWeight: 700,\n      fontSize: 10,\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\",\n      },\n    },\n    chipArray: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: \"100%\",\n      marginTop: 15,\n    },\n    button: {\n      padding: 3,\n      width: 100,\n\n      textTransform: \"none\",\n    },\n    arrow: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    arrowIcon: {},\n\n    buttonsWrapper: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: 95,\n      marginTop: 25,\n    },\n  }));\n\n  console.log(post);\n\n  const checkFavourited = (user, post) => {\n    if (user === null) {\n      return null;\n    }\n\n    let val = false;\n\n    post.likes.forEach((like) => {\n      if (like.user_id === user._id) {\n        val = true;\n      }\n    });\n\n    return val;\n  };\n\n  const classes = useStyles();\n  const { user } = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [fav, setFav] = useState(checkFavourited(user, post));\n\n  const author = post.author;\n  const def =\n    \"https://images.unsplash.com/photo-1493397212122-2b85dda8106b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\";\n\n  const removeLike = async (user) => {\n    let id = post._id;\n\n    let arr = post.likes.filter((like) => {\n      like.user_id !== user._id;\n    });\n\n    let update = {\n      text: post.text,\n      author: post.author,\n      tags: post.tags,\n      likes: arr,\n    };\n\n    let data = {\n      post: post,\n    };\n\n    await editPost(update, id).then(async (response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        await unlike(data, user._id).then((response) => {\n          console.log(response);\n          if (response.status === \"success\") {\n            setFav(false);\n          }\n        });\n      } else {\n      }\n    });\n  };\n\n  const addLike = async (user) => {\n    let id = post._id;\n\n    let user_info = {\n      user_id: user._id,\n      firstname: user.firstname,\n      lastname: user.lastname,\n    };\n\n    let arr = post.likes;\n\n    arr.push(user_info);\n\n    let update = {\n      text: post.text,\n      author: post.author,\n      tags: post.tags,\n      likes: arr,\n    };\n\n    let data = {\n      post: post,\n    };\n\n    await editPost(update, id).then(async (response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        await like(data, user._id).then((response) => {\n          console.log(response);\n          if (response.status === \"success\") {\n            setFav(true);\n          }\n        });\n      } else {\n      }\n    });\n  };\n\n  if (post) {\n    if (user) {\n      return (\n        <div className={classes.card}>\n          {/* TODO : Sort out standard way for doing this */}\n          <Modal open={open} setOpen={setOpen} post={post} />\n          <div className={classes.innerWrapper}>\n            <div className={classes.imageContainer}>\n              <img\n                className={classes.image}\n                src={author.photo ? author.photo : def}\n              />\n            </div>\n            <div className={classes.content}>\n              {/* <div className={classes.authorWrapper}> */}\n              <h2 className={classes.author}>\n                {author.firstname} {author.lastname}\n              </h2>\n              {/* </div> */}\n              <p className={classes.description}>{post.text}</p>\n              <div className={classes.chipArray}>\n                {post.tags.map((tag) => {\n                  return (\n                    <p key={tag.name} className={classes.chip}>\n                      {tag.name}\n                    </p>\n                  );\n                })}\n              </div>\n              <div className={classes.buttonsWrapper}>\n                {fav ? (\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => removeLike(user)}\n                  >\n                    <FavoriteIcon />\n                  </Fab>\n                ) : (\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => addLike(user)}\n                  >\n                    <FavoriteBorderIcon />\n                  </Fab>\n                )}\n                {user._id === author._id ? (\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => setOpen(true)}\n                  >\n                    <MoreHorizIcon />\n                  </Fab>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (user === null) {\n      return (\n        <div className={classes.card}>\n          {/* TODO : Sort out standard way for doing this */}\n          <Modal open={open} setOpen={setOpen} post={post} />\n          <div className={classes.innerWrapper}>\n            <div className={classes.imageContainer}>\n              <img\n                className={classes.image}\n                src={author.photo ? author.photo : def}\n              />\n            </div>\n            <div className={classes.content}>\n              {/* <div className={classes.authorWrapper}> */}\n              <h2 className={classes.author}>\n                {author.firstname} {author.lastname}\n              </h2>\n              {/* </div> */}\n              <p className={classes.description}>{post.text}</p>\n              <div className={classes.chipArray}>\n                {post.tags.map((tag) => {\n                  return (\n                    <p key={tag.name} className={classes.chip}>\n                      {tag.name}\n                    </p>\n                  );\n                })}\n              </div>\n              <div className={classes.buttonsWrapper}>\n                <Fab size=\"small\" color=\"primary\">\n                  <FavoriteBorderIcon />\n                </Fab>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}