{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Profile/UserCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\"; // Material UI\n\nimport Card from \"@material-ui/core/Card\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { IconButton } from \"@material-ui/core\"; // Components\n\nimport Modal from \"./Modal\";\n\nconst format = text => {\n  let arr = text.split(\" \");\n  let format = \"\";\n\n  if (arr.length > 45) {\n    let i = 0;\n\n    while (i < 45) {\n      if (i === 44) {\n        format += arr[i] + \"...\";\n        ++i;\n      } else {\n        format += arr[i] + \" \";\n        ++i;\n      }\n    }\n  }\n\n  return format;\n};\n\nfunction Preview({\n  user\n}) {\n  const useStyles = makeStyles(theme => ({\n    card: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      borderRadius: 0,\n      boxShadow: \"0px, 0px\",\n      marginBottom: 25,\n      marginRight: 25\n    },\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: 0,\n      padding: 0,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      boxShadow: \"0px, 0px\",\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\"\n      },\n      minHeight: \"100%\"\n    },\n    imageContainer: {\n      display: \"flex\",\n      width: 55,\n      height: 55,\n      alignItems: \"center\"\n    },\n    image: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: \"50%\"\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 0,\n      margin: 0,\n      marginTop: 10\n    },\n    contentInnerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      width: \"500px\"\n    },\n    title: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Playfair Display, serif\",\n      fontSize: \"38px\",\n      textAlign: \"left\",\n      fontWeight: 700,\n      margin: 0,\n      padding: 0,\n      width: \"100%\"\n    },\n    details: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: \"90%\",\n      marginLeft: 5\n    },\n    author: {\n      color: \"black\",\n      fontFamily: \"Open Sans, sans-serif\",\n      fontWeight: 400,\n      fontSize: 11,\n      padding: 0,\n      margin: 0,\n      textAlign: \"center\",\n      width: \"100%\"\n    },\n    date: {\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      margin: 0\n    },\n    description: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 300,\n      fontSize: \"14px\",\n      maxWidth: \"90%\",\n      marginTop: 30\n    },\n    chip: {\n      marginRight: theme.spacing(1),\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: 10,\n      backgroundColor: \"#E5E5E5\",\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\"\n      }\n    },\n    chipArray: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: \"100%\",\n      marginTop: 15\n    },\n    button: {\n      padding: 3,\n      width: 100,\n      textTransform: \"none\"\n    },\n    arrow: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    arrowIcon: {}\n  }));\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const def = \"https://images.unsplash.com/photo-1493397212122-2b85dda8106b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\";\n  return __jsx(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, __jsx(Modal, {\n    open: open,\n    setOpen: setOpen,\n    story: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.innerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: classes.image,\n    src: user.photo ? user.photo : def,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: classes.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, user.firstname), __jsx(\"h2\", {\n    className: classes.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, user.lastname))));\n}\n\nexport default Preview;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Profile/UserCard.js"],"names":["useState","useEffect","Card","Chip","CardContent","Button","makeStyles","PublicIcon","RoomIcon","IconButton","Modal","format","text","arr","split","length","i","Preview","user","useStyles","theme","card","display","justifyContent","borderRadius","boxShadow","marginBottom","marginRight","innerWrapper","flexDirection","margin","padding","alignItems","opacity","cursor","minHeight","imageContainer","width","height","image","objectFit","content","marginTop","contentInnerWrapper","title","textDecoration","color","fontFamily","fontSize","textAlign","fontWeight","details","marginLeft","author","date","description","maxWidth","chip","spacing","paddingLeft","paddingRight","backgroundColor","chipArray","flexWrap","button","textTransform","arrow","arrowIcon","classes","open","setOpen","def","photo","firstname","lastname"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,MAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAV;AACA,MAAIH,MAAM,GAAG,EAAb;;AAEA,MAAIE,GAAG,CAACE,MAAJ,GAAa,EAAjB,EAAqB;AACnB,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAG,EAAX,EAAe;AACb,UAAIA,CAAC,KAAK,EAAV,EAAc;AACZL,QAAAA,MAAM,IAAIE,GAAG,CAACG,CAAD,CAAH,GAAS,KAAnB;AACA,UAAEA,CAAF;AACD,OAHD,MAGO;AACLL,QAAAA,MAAM,IAAIE,GAAG,CAACG,CAAD,CAAH,GAAS,GAAnB;AACA,UAAEA,CAAF;AACD;AACF;AACF;;AAED,SAAOL,MAAP;AACD,CAlBD;;AAoBA,SAASM,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA2B;AACzB,QAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,cAAc,EAAE,QAFZ;AAGJC,MAAAA,YAAY,EAAE,CAHV;AAIJC,MAAAA,SAAS,EAAE,UAJP;AAKJC,MAAAA,YAAY,EAAE,EALV;AAMJC,MAAAA,WAAW,EAAE;AANT,KADiC;AAUvCC,IAAAA,YAAY,EAAE;AACZN,MAAAA,OAAO,EAAE,MADG;AAEZO,MAAAA,aAAa,EAAE,QAFH;AAGZC,MAAAA,MAAM,EAAE,CAHI;AAIZC,MAAAA,OAAO,EAAE,CAJG;AAKZR,MAAAA,cAAc,EAAE,QALJ;AAMZS,MAAAA,UAAU,EAAE,QANA;AAOZP,MAAAA,SAAS,EAAE,UAPC;AAQZ,iBAAW;AACTQ,QAAAA,OAAO,EAAE,GADA;AAETC,QAAAA,MAAM,EAAE;AAFC,OARC;AAYZC,MAAAA,SAAS,EAAE;AAZC,KAVyB;AAwBvCC,IAAAA,cAAc,EAAE;AACdd,MAAAA,OAAO,EAAE,MADK;AAEde,MAAAA,KAAK,EAAE,EAFO;AAGdC,MAAAA,MAAM,EAAE,EAHM;AAIdN,MAAAA,UAAU,EAAE;AAJE,KAxBuB;AA8BvCO,IAAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLE,MAAAA,SAAS,EAAE,OAHN;AAILhB,MAAAA,YAAY,EAAE;AAJT,KA9BgC;AAqCvCiB,IAAAA,OAAO,EAAE;AACPnB,MAAAA,OAAO,EAAE,MADF;AAEPO,MAAAA,aAAa,EAAE,QAFR;AAGPN,MAAAA,cAAc,EAAE,QAHT;AAIPQ,MAAAA,OAAO,EAAE,CAJF;AAKPD,MAAAA,MAAM,EAAE,CALD;AAMPY,MAAAA,SAAS,EAAE;AANJ,KArC8B;AA8CvCC,IAAAA,mBAAmB,EAAE;AACnBrB,MAAAA,OAAO,EAAE,MADU;AAEnBO,MAAAA,aAAa,EAAE,QAFI;AAGnBN,MAAAA,cAAc,EAAE,YAHG;AAInBc,MAAAA,KAAK,EAAE;AAJY,KA9CkB;AAqDvCO,IAAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,MADX;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,UAAU,EAAE,yBAHP;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,SAAS,EAAE,MALN;AAMLC,MAAAA,UAAU,EAAE,GANP;AAOLpB,MAAAA,MAAM,EAAE,CAPH;AAQLC,MAAAA,OAAO,EAAE,CARJ;AASLM,MAAAA,KAAK,EAAE;AATF,KArDgC;AAiEvCc,IAAAA,OAAO,EAAE;AACP7B,MAAAA,OAAO,EAAE,MADF;AAEPO,MAAAA,aAAa,EAAE,KAFR;AAGPN,MAAAA,cAAc,EAAE,eAHT;AAIPS,MAAAA,UAAU,EAAE,QAJL;AAKPK,MAAAA,KAAK,EAAE,KALA;AAOPe,MAAAA,UAAU,EAAE;AAPL,KAjE8B;AA0EvCC,IAAAA,MAAM,EAAE;AACNP,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,UAAU,EAAE,uBAFN;AAGNG,MAAAA,UAAU,EAAE,GAHN;AAINF,MAAAA,QAAQ,EAAE,EAJJ;AAKNjB,MAAAA,OAAO,EAAE,CALH;AAMND,MAAAA,MAAM,EAAE,CANF;AAONmB,MAAAA,SAAS,EAAE,QAPL;AAQNZ,MAAAA,KAAK,EAAE;AARD,KA1E+B;AAoFvCiB,IAAAA,IAAI,EAAE;AACJR,MAAAA,KAAK,EAAE,OADH;AAEJC,MAAAA,UAAU,EAAE,yBAFR;AAGJG,MAAAA,UAAU,EAAE,GAHR;AAIJF,MAAAA,QAAQ,EAAE,MAJN;AAKJlB,MAAAA,MAAM,EAAE;AALJ,KApFiC;AA2FvCyB,IAAAA,WAAW,EAAE;AACXV,MAAAA,cAAc,EAAE,MADL;AAEXC,MAAAA,KAAK,EAAE,OAFI;AAGXC,MAAAA,UAAU,EAAE,yBAHD;AAIXG,MAAAA,UAAU,EAAE,GAJD;AAKXF,MAAAA,QAAQ,EAAE,MALC;AAMXQ,MAAAA,QAAQ,EAAE,KANC;AAOXd,MAAAA,SAAS,EAAE;AAPA,KA3F0B;AAoGvCe,IAAAA,IAAI,EAAE;AACJ9B,MAAAA,WAAW,EAAEP,KAAK,CAACsC,OAAN,CAAc,CAAd,CADT;AAEJhC,MAAAA,YAAY,EAAE,EAFV;AAGJiC,MAAAA,WAAW,EAAE,CAHT;AAIJC,MAAAA,YAAY,EAAE,CAJV;AAKJb,MAAAA,UAAU,EAAE,yBALR;AAMJG,MAAAA,UAAU,EAAE,GANR;AAOJF,MAAAA,QAAQ,EAAE,EAPN;AAQJa,MAAAA,eAAe,EAAE,SARb;AASJ,iBAAW;AACT5B,QAAAA,OAAO,EAAE,GADA;AAETC,QAAAA,MAAM,EAAE;AAFC;AATP,KApGiC;AAkHvC4B,IAAAA,SAAS,EAAE;AACTxC,MAAAA,OAAO,EAAE,MADA;AAETyC,MAAAA,QAAQ,EAAE,MAFD;AAGT1B,MAAAA,KAAK,EAAE,MAHE;AAITK,MAAAA,SAAS,EAAE;AAJF,KAlH4B;AAwHvCsB,IAAAA,MAAM,EAAE;AACNjC,MAAAA,OAAO,EAAE,CADH;AAENM,MAAAA,KAAK,EAAE,GAFD;AAIN4B,MAAAA,aAAa,EAAE;AAJT,KAxH+B;AA8HvCC,IAAAA,KAAK,EAAE;AACL5C,MAAAA,OAAO,EAAE,MADJ;AAELU,MAAAA,UAAU,EAAE;AAFP,KA9HgC;AAkIvCmC,IAAAA,SAAS,EAAE;AAlI4B,GAAZ,CAAD,CAA5B;AAqIA,QAAMC,OAAO,GAAGjD,SAAS,EAAzB;AACA,QAAM;AAAA,OAACkD,IAAD;AAAA,OAAOC;AAAP,MAAkBtE,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMuE,GAAG,GACP,wIADF;AAEA,SACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAAC/C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEgD,IAAb;AAAmB,IAAA,OAAO,EAAEC,OAA5B;AAAqC,IAAA,KAAK,EAAEpD,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAEkD,OAAO,CAACxC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEwC,OAAO,CAAChC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEgC,OAAO,CAAC7B,KAAxB;AAA+B,IAAA,GAAG,EAAErB,IAAI,CAACsD,KAAL,GAAatD,IAAI,CAACsD,KAAlB,GAA0BD,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAAC3B,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAE2B,OAAO,CAACf,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCnC,IAAI,CAACuD,SAArC,CADF,EAEE;AAAI,IAAA,SAAS,EAAEL,OAAO,CAACf,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCnC,IAAI,CAACwD,QAArC,CAFF,CAJF,CAHF,CADF;AA2CD;;AAED,eAAezD,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n// Material UI\nimport Card from \"@material-ui/core/Card\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport { IconButton } from \"@material-ui/core\";\n// Components\nimport Modal from \"./Modal\";\n\nconst format = (text) => {\n  let arr = text.split(\" \");\n  let format = \"\";\n\n  if (arr.length > 45) {\n    let i = 0;\n    while (i < 45) {\n      if (i === 44) {\n        format += arr[i] + \"...\";\n        ++i;\n      } else {\n        format += arr[i] + \" \";\n        ++i;\n      }\n    }\n  }\n\n  return format;\n};\n\nfunction Preview({ user }) {\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      borderRadius: 0,\n      boxShadow: \"0px, 0px\",\n      marginBottom: 25,\n      marginRight: 25,\n    },\n\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: 0,\n      padding: 0,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      boxShadow: \"0px, 0px\",\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\",\n      },\n      minHeight: \"100%\",\n    },\n    imageContainer: {\n      display: \"flex\",\n      width: 55,\n      height: 55,\n      alignItems: \"center\",\n    },\n    image: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: \"50%\",\n    },\n\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 0,\n      margin: 0,\n      marginTop: 10,\n    },\n\n    contentInnerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      width: \"500px\",\n    },\n\n    title: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Playfair Display, serif\",\n      fontSize: \"38px\",\n      textAlign: \"left\",\n      fontWeight: 700,\n      margin: 0,\n      padding: 0,\n      width: \"100%\",\n    },\n\n    details: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: \"90%\",\n\n      marginLeft: 5,\n    },\n    author: {\n      color: \"black\",\n      fontFamily: \"Open Sans, sans-serif\",\n      fontWeight: 400,\n      fontSize: 11,\n      padding: 0,\n      margin: 0,\n      textAlign: \"center\",\n      width: \"100%\",\n    },\n    date: {\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      margin: 0,\n    },\n    description: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 300,\n      fontSize: \"14px\",\n      maxWidth: \"90%\",\n      marginTop: 30,\n    },\n    chip: {\n      marginRight: theme.spacing(1),\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n      fontFamily: \"Frank Ruhl Libre, serif\",\n      fontWeight: 500,\n      fontSize: 10,\n      backgroundColor: \"#E5E5E5\",\n      \"&:hover\": {\n        opacity: 0.5,\n        cursor: \"pointer\",\n      },\n    },\n    chipArray: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: \"100%\",\n      marginTop: 15,\n    },\n    button: {\n      padding: 3,\n      width: 100,\n\n      textTransform: \"none\",\n    },\n    arrow: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    arrowIcon: {},\n  }));\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const def =\n    \"https://images.unsplash.com/photo-1493397212122-2b85dda8106b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\";\n  return (\n    <div className={classes.card}>\n      {/* TODO : Sort out standard way for doing this */}\n      <Modal open={open} setOpen={setOpen} story={user} />\n      <div className={classes.innerWrapper}>\n        <div className={classes.imageContainer}>\n          <img className={classes.image} src={user.photo ? user.photo : def} />\n        </div>\n        <div className={classes.content}>\n          <h2 className={classes.author}>{user.firstname}</h2>\n          <h2 className={classes.author}>{user.lastname}</h2>\n          {/* <p className={classes.description}>{format(story.achievements)}</p> */}\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.button}\n            onClick={() => setOpen(true)}\n          >\n            View\n          </Button> */}\n        </div>\n        {/* <div className={classes.chipArray}>\n          <Chip\n            icon={<RoomIcon />}\n            label={user.location}\n            className={classes.chip}\n          />\n          <a\n            style={{ textDecoration: \"none\" }}\n            href={\"https://\" + user.website}\n            target=\"_blank\"\n          >\n            <Chip\n              icon={<PublicIcon />}\n              label={user.website}\n              className={classes.chip}\n            />\n          </a>\n          <Chip label={user.industry} className={classes.chip} />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}