{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Modal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState } from \"react\";\nimport useWitdh from \"../../hooks/useWidth\";\nimport Form from \"./Form\";\nimport Button from \"@material-ui/core/Button\"; // import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  _s();\n\n  var _useState = useState(false),\n      fullScreen = _useState[0],\n      setFullScreen = _useState[1];\n\n  var _useState2 = useState(10),\n      top = _useState2[0],\n      setTop = _useState2[1]; // let width = useWidth();\n\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      dialog: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"100%\"\n      },\n      closeButton: {\n        width: \"50px\",\n        height: \"50px\" // position: \"fixed\",\n        // top: `6.5px`,\n        // right: \"5px\",\n\n      },\n      icon: {\n        width: \"60px\",\n        height: \"auto\",\n        // position: \"fixed\",\n        // top: `22.5px`,\n        marginLeft: \"10px\"\n      },\n      action: {\n        zIndex: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        minWidth: \"100%\",\n        height: \"65px\"\n      }\n    };\n  });\n  var classes = useStyles();\n\n  var _useContext = useContext(ModalContext),\n      showLogin = _useContext.showLogin,\n      setShowLogin = _useContext.setShowLogin,\n      setShowOnboard = _useContext.setShowOnboard;\n\n  var _useWitdh = useWitdh(),\n      width = _useWitdh.width,\n      setWidth = _useWitdh.setWidth;\n\n  useEffect(function () {\n    setWidth(window.innerWidth);\n  }, []);\n\n  var handleOpen = function handleOpen() {\n    setShowLogin(true);\n    setShowOnboard(true);\n  };\n\n  var handleClose = function handleClose() {\n    setShowLogin(false);\n    setShowOnboard(false);\n  };\n\n  useEffect(function () {}, [showLogin]);\n  return __jsx(Dialog, {\n    scroll: \"body\",\n    fullWidth: true,\n    fullScreen: width < 800,\n    maxWidth: \"sm\",\n    open: showLogin,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(DialogActions, {\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: classes.icon,\n    src: \"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\",\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(IconButton, {\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(TransitionsModal, \"d4TVK16oxIPeTy/hhANt15MWAkY=\", true, function () {\n  return [useWitdh];\n});\n\n_c = TransitionsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransitionsModal\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Modal.js"],"names":["React","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","CloseIcon","ModalContext","useEffect","useContext","useState","useWitdh","Form","Button","TransitionsModal","props","fullScreen","setFullScreen","top","setTop","useStyles","theme","dialog","display","flexDirection","alignItems","justifyContent","minHeight","closeButton","width","height","icon","marginLeft","action","zIndex","minWidth","classes","showLogin","setShowLogin","setShowOnboard","setWidth","window","innerWidth","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState } from \"react\";\nimport useWitdh from \"../../hooks/useWidth\";\nimport Form from \"./Form\";\n\nimport Button from \"@material-ui/core/Button\";\n\n// import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  const [fullScreen, setFullScreen] = useState(false);\n  const [top, setTop] = useState(10);\n  // let width = useWidth();\n\n  const useStyles = makeStyles((theme) => ({\n    dialog: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"100%\",\n    },\n\n    closeButton: {\n      width: \"50px\",\n      height: \"50px\",\n      // position: \"fixed\",\n      // top: `6.5px`,\n      // right: \"5px\",\n    },\n    icon: {\n      width: \"60px\",\n      height: \"auto\",\n      // position: \"fixed\",\n      // top: `22.5px`,\n      marginLeft: \"10px\",\n    },\n    action: {\n      zIndex: 2,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      minWidth: \"100%\",\n      height: \"65px\",\n    },\n  }));\n\n  const classes = useStyles();\n  const { showLogin, setShowLogin, setShowOnboard } = useContext(ModalContext);\n  const { width, setWidth } = useWitdh();\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n  }, []);\n\n  const handleOpen = () => {\n    setShowLogin(true);\n    setShowOnboard(true);\n  };\n\n  const handleClose = () => {\n    setShowLogin(false);\n    setShowOnboard(false);\n  };\n\n  useEffect(() => {}, [showLogin]);\n\n  return (\n    <Dialog\n      scroll=\"body\"\n      fullWidth={true}\n      fullScreen={width < 800}\n      maxWidth={\"sm\"}\n      open={showLogin}\n      onClose={handleClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogActions className={classes.action}>\n        <img\n          className={classes.icon}\n          src=\"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\"\n          alt=\"icon\"\n        />\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogActions>\n      <Form />\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}