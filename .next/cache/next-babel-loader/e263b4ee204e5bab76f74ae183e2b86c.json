{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"../../hooks/useForm\";\nimport Cookie from \"js-cookie\";\nimport { validateLogin } from \"./utils/validateLogin\";\nimport { authenticate } from \"../../utils/authentication/authenticate\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { formatEmail } from \"../../utils/validation/formatting\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: 40,\n      minHeight: \"60vh\",\n      overflow: \"scroll\"\n    },\n    textField: {\n      width: \"17rem\",\n      margin: \"1rem\",\n      flexGrow: 1,\n      flexShrink: 1\n    },\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      minHeight: \"10rem\"\n    },\n    header: {\n      textAlign: \"center\",\n      fontFamily: \"Open Sans, sans-serif\",\n      fontWeight: 500\n    },\n    text: {\n      textAlign: \"center\",\n      width: \"15rem\",\n      marginBottom: \"1rem\"\n    },\n    button: {\n      marginTop: 25,\n      marginBottom: 15,\n      textTransform: \"none\",\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 25,\n      paddingRight: 25,\n      fontSize: 18,\n      fontFamily: \"Poppins, serif\"\n    },\n    signupButton: {\n      color: \"blue\",\n      textTransform: \"none\",\n      marginLeft: 5\n    }\n  };\n});\n\nfunction LoginForm() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState({\n    value: false,\n    message: \"\"\n  }),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useContext = useContext(UserContext),\n      setUser = _useContext.setUser,\n      token = _useContext.token,\n      setAuthenticated = _useContext.setAuthenticated,\n      setToken = _useContext.setToken,\n      authenticated = _useContext.authenticated;\n\n  var _useContext2 = useContext(ModalContext),\n      setShowOnboard = _useContext2.setShowOnboard,\n      setShowLogin = _useContext2.setShowLogin;\n\n  var _useForm = useForm({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    location: \"\"\n  }),\n      errors = _useForm.errors,\n      values = _useForm.values,\n      submitting = _useForm.submitting,\n      setSubmitting = _useForm.setSubmitting,\n      handleChange = _useForm.handleChange,\n      handleErrors = _useForm.handleErrors;\n\n  useEffect(function () {\n    // NOTE : reroute to `/home` upon sucessful login\n    if (token !== null && token !== undefined) {\n      Cookie.set(\"token\", token);\n    } else {\n      Cookie.remove(\"token\");\n    }\n  }, [token]); // TODO : Abstract `Loading` into a seperate component\n  // TODO : Abstract `Error` into a seperate component\n\n  if (error.value) {\n    return __jsx(\"p\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }\n    }, error.message);\n  } else {\n    return __jsx(\"form\", {\n      className: classes.root // onSubmit={async (e) => {\n      //   e.preventDefault();\n      //   // NOTE : With conditional logic, dependent on handleErros return value, async isn= neccessary since function must first\n      //   //        await the response of handleErrors before procceding onto next statement, etc ...\n      //   values.email = formatEmail(values.email);\n      //   if (await handleErrors(values, validateLogin)) {\n      //     authenticate(values).then((response) => {\n      //       if (response.status === \"success\") {\n      //         // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n      //         setToken(response.data.token);\n      //         setUser(response.data.user);\n      //         setAuthenticated(true);\n      //         setLoading(false);\n      //         Router.push(\"/home\");\n      //         setError({\n      //           value: false,\n      //           message: \"\",\n      //         });\n      //       } else {\n      //         setToken(null);\n      //         setAuthenticated(false);\n      //         setError({\n      //           value: true,\n      //           message: response.message,\n      //         });\n      //         setSubmitting(false);\n      //       }\n      //     });\n      //   }\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Welcome Back!\"), __jsx(\"div\", {\n      className: classes.innerWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, __jsx(TextField, {\n      className: classes.textField,\n      type: \"email\",\n      name: \"email\",\n      value: values.email,\n      label: \"Email\",\n      onChange: function onChange(e) {\n        return handleChange(e);\n      },\n      error: errors.email ? true : false,\n      helperText: errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }), __jsx(TextField, {\n      className: classes.textField,\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      label: \"Password\",\n      onChange: function onChange(e) {\n        return handleChange(e);\n      },\n      error: errors.password ? true : false,\n      helperText: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    })), __jsx(Button, {\n      className: classes.button,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // TODO : Find out why this needs to be wrapped in an async ?\n                // TODO : Determine if this design straetgy is okay -> using async function, even when no async is necessary ?\n                values.email = formatEmail(values.email);\n                _context.next = 3;\n                return handleErrors(values, validateLogin);\n\n              case 3:\n                if (!_context.sent) {\n                  _context.next = 5;\n                  break;\n                }\n\n                //   setLoading(true);\n                authenticate(values).then(function (response) {\n                  console.log(response);\n\n                  if (response.status === \"success\") {\n                    // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n                    setToken(response.data.token);\n                    setUser(response.data.user);\n                    setAuthenticated(true);\n                    setShowOnboard(false);\n                    setShowLogin(false); //   setLoading(false);\n\n                    Router.push(\"/\");\n                    setError({\n                      value: false,\n                      message: \"\"\n                    });\n                  } else {\n                    setToken(null);\n                    setAuthenticated(false);\n                    setError({\n                      value: true,\n                      message: response.message\n                    }); //   setLoading(false);\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"Login\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, \"Don't have an account?\", __jsx(Button, {\n      onClick: function onClick() {\n        setShowOnboard(true);\n      },\n      className: classes.signupButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"Create One\")));\n  }\n}\n\n_s(LoginForm, \"S838rMtmSuoGADt7wES5vg+ruM0=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Login/Form.js"],"names":["useForm","Cookie","validateLogin","authenticate","useContext","useState","useEffect","UserContext","ModalContext","formatEmail","Router","makeStyles","TextField","Button","useStyles","theme","root","display","flexDirection","alignItems","marginTop","minHeight","overflow","textField","width","margin","flexGrow","flexShrink","innerWrapper","justifyContent","header","textAlign","fontFamily","fontWeight","text","marginBottom","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","fontSize","signupButton","color","marginLeft","LoginForm","classes","value","message","error","setError","setUser","token","setAuthenticated","setToken","authenticated","setShowOnboard","setShowLogin","email","password","firstname","lastname","location","errors","values","submitting","setSubmitting","handleChange","handleErrors","undefined","set","remove","e","then","response","console","log","status","data","user","push"],"mappings":"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","sourcesContent":["import { useForm } from \"../../hooks/useForm\";\nimport Cookie from \"js-cookie\";\nimport { validateLogin } from \"./utils/validateLogin\";\nimport { authenticate } from \"../../utils/authentication/authenticate\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { formatEmail } from \"../../utils/validation/formatting\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 40,\n    minHeight: \"60vh\",\n    overflow: \"scroll\",\n  },\n  textField: {\n    width: \"17rem\",\n    margin: \"1rem\",\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    minHeight: \"10rem\",\n  },\n  header: {\n    textAlign: \"center\",\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 500,\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"15rem\",\n    marginBottom: \"1rem\",\n  },\n\n  button: {\n    marginTop: 25,\n    marginBottom: 15,\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 25,\n    paddingRight: 25,\n    fontSize: 18,\n    fontFamily: \"Poppins, serif\",\n  },\n\n  signupButton: {\n    color: \"blue\",\n    textTransform: \"none\",\n    marginLeft: 5,\n  },\n}));\n\nfunction LoginForm() {\n  const classes = useStyles();\n  const [error, setError] = useState({\n    value: false,\n    message: \"\",\n  });\n\n  const {\n    setUser,\n    token,\n    setAuthenticated,\n    setToken,\n    authenticated,\n  } = useContext(UserContext);\n\n  const { setShowOnboard, setShowLogin } = useContext(ModalContext);\n\n  const {\n    errors,\n    values,\n    submitting,\n    setSubmitting,\n    handleChange,\n    handleErrors,\n  } = useForm({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    location: \"\",\n  });\n\n  useEffect(() => {\n    // NOTE : reroute to `/home` upon sucessful login\n    if (token !== null && token !== undefined) {\n      Cookie.set(\"token\", token);\n    } else {\n      Cookie.remove(\"token\");\n    }\n  }, [token]);\n\n  // TODO : Abstract `Loading` into a seperate component\n\n  // TODO : Abstract `Error` into a seperate component\n\n  if (error.value) {\n    return <p className={classes.root}>{error.message}</p>;\n  } else {\n    return (\n      <form\n        className={classes.root}\n        // onSubmit={async (e) => {\n        //   e.preventDefault();\n\n        //   // NOTE : With conditional logic, dependent on handleErros return value, async isn= neccessary since function must first\n        //   //        await the response of handleErrors before procceding onto next statement, etc ...\n        //   values.email = formatEmail(values.email);\n        //   if (await handleErrors(values, validateLogin)) {\n        //     authenticate(values).then((response) => {\n        //       if (response.status === \"success\") {\n        //         // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n        //         setToken(response.data.token);\n        //         setUser(response.data.user);\n        //         setAuthenticated(true);\n        //         setLoading(false);\n        //         Router.push(\"/home\");\n        //         setError({\n        //           value: false,\n        //           message: \"\",\n        //         });\n        //       } else {\n        //         setToken(null);\n        //         setAuthenticated(false);\n        //         setError({\n        //           value: true,\n        //           message: response.message,\n        //         });\n        //         setSubmitting(false);\n        //       }\n        //     });\n        //   }\n        // }}\n      >\n        <h1 className={classes.header}>Welcome Back!</h1>\n        <div className={classes.innerWrapper}>\n          <TextField\n            className={classes.textField}\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            label=\"Email\"\n            onChange={(e) => handleChange(e)}\n            error={errors.email ? true : false}\n            helperText={errors.email}\n          />\n          <TextField\n            className={classes.textField}\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            label=\"Password\"\n            onChange={(e) => handleChange(e)}\n            error={errors.password ? true : false}\n            helperText={errors.password}\n          />\n        </div>\n\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={async () => {\n            // TODO : Find out why this needs to be wrapped in an async ?\n            // TODO : Determine if this design straetgy is okay -> using async function, even when no async is necessary ?\n            values.email = formatEmail(values.email);\n            if (await handleErrors(values, validateLogin)) {\n              //   setLoading(true);\n              authenticate(values).then((response) => {\n                console.log(response);\n                if (response.status === \"success\") {\n                  // NOTE : set `token`, `user`, `authenticated` state, in UserContext, upon sucessful login\n                  setToken(response.data.token);\n                  setUser(response.data.user);\n                  setAuthenticated(true);\n                  setShowOnboard(false);\n                  setShowLogin(false);\n                  //   setLoading(false);\n                  Router.push(\"/\");\n                  setError({\n                    value: false,\n                    message: \"\",\n                  });\n                } else {\n                  setToken(null);\n                  setAuthenticated(false);\n                  setError({\n                    value: true,\n                    message: response.message,\n                  });\n                  //   setLoading(false);\n                }\n              });\n            }\n          }}\n        >\n          Login\n        </Button>\n        <p>\n          Don't have an account?\n          <Button\n            onClick={() => {\n              setShowOnboard(true);\n            }}\n            className={classes.signupButton}\n          >\n            Create One\n          </Button>\n        </p>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}