{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Create/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Router from \"next/router\"; // Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; // Components\n\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\"; // Contexts\n\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { ModalContext } from \"../../../contexts/ModalContext\"; // Utils\n\nimport { createPost } from \"./utils/createPost\"; // Hooks\n\nimport useWidth from \"../../../hooks/useWidth\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      minHeight: \"50vh\",\n      marginTop: 20,\n      marginBottom: 10,\n      width: \"100%\",\n      overflowX: \"hidden\"\n    },\n    textField: {\n      width: \"17rem\",\n      marginTop: 20,\n      flexGrow: 1,\n      flexShrink: 1\n    },\n    innerWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"white\",\n      borderRadius: 10\n    },\n    button: {\n      marginTop: 45,\n      marginBottom: \"3rem\",\n      textTransform: \"none\",\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 10,\n      paddingRight: 10,\n      fontSize: 12,\n      width: \"100%\",\n      fontFamily: \"Open Sans, sans serif\"\n    }\n  };\n});\n\nvar Main = function Main() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      tags = _useState3[0],\n      setTags = _useState3[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ModalContext),\n      setShowCreate = _useContext2.setShowCreate;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text) {\n      var post;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              post = {\n                text: text,\n                author: {\n                  _id: user._id,\n                  firstname: user.firstname,\n                  lastname: user.lastname,\n                  photo: user.photo\n                },\n                tags: tags\n              };\n              _context.next = 4;\n              return createPost(post).then(function (response) {\n                console.log(response);\n\n                if (response.status === \"success\") {\n                  setLoading(false);\n                  Router.reload();\n                } else {\n                  setLoading(false);\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.innerWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    user: user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(TextField, {\n    multiline: true,\n    rows: 4,\n    className: classes.textField,\n    variant: \"outlined\",\n    type: \"text\",\n    label: \"What's on your mind?\",\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), __jsx(Industry, {\n    tags: tags,\n    setTags: setTags,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    disabled: text.length === 0,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: function onClick() {\n      return onSubmit(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Create\")));\n};\n\n_s(Main, \"yeGj5zRXh0fqI9135feINtpn8DE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Create/Main.js"],"names":["useContext","useState","Router","makeStyles","TextField","Button","UserCard","Industry","UserContext","ModalContext","createPost","useWidth","useStyles","theme","root","display","flexDirection","alignItems","minHeight","marginTop","marginBottom","width","overflowX","textField","flexGrow","flexShrink","innerWrapper","justifyContent","backgroundColor","borderRadius","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","fontSize","fontFamily","Main","classes","loading","setLoading","text","setText","tags","setTags","user","setShowCreate","onSubmit","post","author","_id","firstname","lastname","photo","then","response","console","log","status","reload","e","target","value","length"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Router from \"next/router\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n// Components\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\";\n// Contexts\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { ModalContext } from \"../../../contexts/ModalContext\";\n\n// Utils\nimport { createPost } from \"./utils/createPost\";\n// Hooks\nimport useWidth from \"../../../hooks/useWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    minHeight: \"50vh\",\n    marginTop: 20,\n    marginBottom: 10,\n    width: \"100%\",\n    overflowX: \"hidden\",\n  },\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  button: {\n    marginTop: 45,\n    marginBottom: \"3rem\",\n    textTransform: \"none\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: 12,\n    width: \"100%\",\n    fontFamily: \"Open Sans, sans serif\",\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const { user } = useContext(UserContext);\n  const { setShowCreate } = useContext(ModalContext);\n\n  const onSubmit = async (text) => {\n    setLoading(true);\n\n    let post = {\n      text: text,\n      author: {\n        _id: user._id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        photo: user.photo,\n      },\n      tags: tags,\n    };\n\n    await createPost(post).then((response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerWrapper}>\n        <UserCard user={user} />\n        <TextField\n          multiline\n          rows={4}\n          className={classes.textField}\n          variant=\"outlined\"\n          type=\"text\"\n          label=\"What's on your mind?\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <Industry tags={tags} setTags={setTags} />\n        <Button\n          disabled={text.length === 0}\n          variant={\"contained\"}\n          color={\"primary\"}\n          className={classes.button}\n          onClick={() => onSubmit(text)}\n        >\n          Create\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}