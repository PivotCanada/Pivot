{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/SignUpV2/Modal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState, useRef } from \"react\";\nimport useWitdh from \"../../hooks/useWidth\";\nimport Form from \"./Form\";\nimport Button from \"@material-ui/core/Button\"; // import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  _s();\n\n  var _useState = useState(false),\n      fullScreen = _useState[0],\n      setFullScreen = _useState[1];\n\n  var _useState2 = useState(10),\n      top = _useState2[0],\n      setTop = _useState2[1];\n\n  var _useState3 = useState(true),\n      onboard = _useState3[0],\n      setOnboard = _useState3[1];\n\n  var _useWitdh = useWitdh(),\n      width = _useWitdh.width,\n      setWidth = _useWitdh.setWidth;\n\n  useEffect(function () {\n    setWidth(window.innerWidth);\n  }, []); // let width = useWidth();\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      dialog: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: \"100%\",\n        minHeight: \"100%\"\n      },\n      closeButton: {\n        width: \"50px\",\n        height: \"50px\" // position: \"fixed\",\n        // top: `6.5px`,\n        // right: \"5px\",\n\n      },\n      icon: {\n        width: \"60px\",\n        height: \"auto\",\n        // position: \"fixed\",\n        // top: `22.5px`,\n        marginLeft: \"10px\"\n      },\n      action: {\n        zIndex: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        height: \"65px\"\n      }\n    };\n  });\n  var classes = useStyles();\n  var Ref = useRef(0);\n\n  var _useContext = useContext(ModalContext),\n      showOnboard = _useContext.showOnboard,\n      setShowOnboard = _useContext.setShowOnboard,\n      setShowLogin = _useContext.setShowLogin;\n\n  var handleOpen = function handleOpen() {\n    setShowLogin(true);\n    setShowOnboard(true);\n  };\n\n  var handleClose = function handleClose() {\n    setShowLogin(false);\n    setShowOnboard(false);\n  };\n\n  useEffect(function () {}, [showOnboard]);\n  useEffect(function () {\n    console.log(window.scrollY);\n  }, []);\n  return __jsx(Dialog, {\n    scroll: \"body\",\n    fullWidth: true,\n    fullScreen: width < 800,\n    maxWidth: \"sm\",\n    open: showOnboard,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(DialogActions, {\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    ref: Ref,\n    className: classes.icon,\n    src: \"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\",\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), __jsx(IconButton, {\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(TransitionsModal, \"Su20iXv2Dv4iniLCdWtb2nWsEj4=\", true, function () {\n  return [useWitdh];\n});\n\n_c = TransitionsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransitionsModal\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/SignUpV2/Modal.js"],"names":["React","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","CloseIcon","ModalContext","useEffect","useContext","useState","useRef","useWitdh","Form","Button","TransitionsModal","props","fullScreen","setFullScreen","top","setTop","onboard","setOnboard","width","setWidth","window","innerWidth","useStyles","theme","dialog","display","flexDirection","alignItems","justifyContent","minWidth","minHeight","closeButton","height","icon","marginLeft","action","zIndex","classes","Ref","showOnboard","setShowOnboard","setShowLogin","handleOpen","handleClose","console","log","scrollY"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport { useEffect, useContext, useState, useRef } from \"react\";\nimport useWitdh from \"../../hooks/useWidth\";\nimport Form from \"./Form\";\n\nimport Button from \"@material-ui/core/Button\";\n\n// import useWidth from \"../../hooks/useWidth\";\n\nexport default function TransitionsModal(props) {\n  const [fullScreen, setFullScreen] = useState(false);\n  const [top, setTop] = useState(10);\n  const [onboard, setOnboard] = useState(true);\n\n  const { width, setWidth } = useWitdh();\n\n  useEffect(() => {\n    setWidth(window.innerWidth);\n  }, []);\n\n  // let width = useWidth();\n\n  const useStyles = makeStyles((theme) => ({\n    dialog: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"100%\",\n      minHeight: \"100%\",\n    },\n\n    closeButton: {\n      width: \"50px\",\n      height: \"50px\",\n      // position: \"fixed\",\n      // top: `6.5px`,\n      // right: \"5px\",\n    },\n    icon: {\n      width: \"60px\",\n      height: \"auto\",\n      // position: \"fixed\",\n      // top: `22.5px`,\n      marginLeft: \"10px\",\n    },\n    action: {\n      zIndex: 2,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      height: \"65px\",\n    },\n  }));\n\n  const classes = useStyles();\n  const Ref = useRef(0);\n  const { showOnboard, setShowOnboard, setShowLogin } = useContext(\n    ModalContext\n  );\n\n  const handleOpen = () => {\n    setShowLogin(true);\n    setShowOnboard(true);\n  };\n\n  const handleClose = () => {\n    setShowLogin(false);\n    setShowOnboard(false);\n  };\n\n  useEffect(() => {}, [showOnboard]);\n\n  useEffect(() => {\n    console.log(window.scrollY);\n  }, []);\n\n  return (\n    <Dialog\n      scroll=\"body\"\n      fullWidth={true}\n      fullScreen={width < 800}\n      maxWidth={\"sm\"}\n      open={showOnboard}\n      onClose={handleClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogActions className={classes.action}>\n        <img\n          ref={Ref}\n          className={classes.icon}\n          src=\"https://pivot.nyc3.digitaloceanspaces.com/Logo.svg\"\n          alt=\"icon\"\n        />\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogActions>\n      <Form />\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}