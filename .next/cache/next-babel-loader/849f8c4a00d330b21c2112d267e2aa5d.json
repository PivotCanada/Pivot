{"ast":null,"code":"export const isEmpty = string => {\n  return string === \"\" ? true : false;\n};\nexport const contains = (string, char) => {\n  return string.includes(char) ? true : false;\n};\nexport const validateEmail = email => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email));\n};\nexport const formatEmail = email => {\n  return email.trim().toLowerCase();\n};","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/utils/validation/formatting.js"],"names":["isEmpty","string","contains","char","includes","validateEmail","email","re","test","String","formatEmail","trim","toLowerCase"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,MAAD,IAAY;AACjC,SAAOA,MAAM,KAAK,EAAX,GAAgB,IAAhB,GAAuB,KAA9B;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,CAACD,MAAD,EAASE,IAAT,KAAkB;AACxC,SAAOF,MAAM,CAACG,QAAP,CAAgBD,IAAhB,IAAwB,IAAxB,GAA+B,KAAtC;AACD,CAFM;AAIP,OAAO,MAAME,aAAa,GAAIC,KAAD,IAAW;AACtC,MAAIC,EAAE,GAAG,yJAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAd,CAAP;AACD,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAIJ,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACK,IAAN,GAAaC,WAAb,EAAP;AACD,CAFM","sourcesContent":["export const isEmpty = (string) => {\n  return string === \"\" ? true : false;\n};\n\nexport const contains = (string, char) => {\n  return string.includes(char) ? true : false;\n};\n\nexport const validateEmail = (email) => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email));\n};\n\nexport const formatEmail = (email) => {\n  return email.trim().toLowerCase();\n};\n"]},"metadata":{},"sourceType":"module"}