{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/SignUpV2/Website.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100vw\",\n      overflow: \"scroll\"\n    },\n    textField: {\n      width: \"17rem\",\n      margin: 0,\n      flexGrow: 1,\n      flexShrink: 1\n    },\n    container: {\n      display: \"flex\",\n      margin: 35,\n      justifyContent: \"space-between\",\n      width: 200\n    }\n  };\n});\n\nvar Website = function Website(_ref) {\n  _s();\n\n  var handleChange = _ref.handleChange,\n      values = _ref.values,\n      errors = _ref.errors;\n  var classes = useStyles();\n  useEffect(function () {\n    if (!values.hasSite) {\n      handleChange(\"website\", \"\");\n    }\n  }, [values.hasSite]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"website\",\n    value: values.website,\n    label: \"Website\",\n    onChange: function onChange(e) {\n      return handleChange(\"website\", e.target.value);\n    },\n    disabled: !values.hasSite,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: !values.hasSite,\n      onChange: function onChange() {\n        return handleChange(\"hasSite\", !values.hasSite);\n      },\n      name: \"hasSite\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }),\n    label: \"We don't have a site\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Website, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Website;\nexport default Website;\n\nvar _c;\n\n$RefreshReg$(_c, \"Website\");","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/SignUpV2/Website.js"],"names":["React","useEffect","makeStyles","FormControlLabel","Checkbox","TextField","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","width","overflow","textField","margin","flexGrow","flexShrink","container","Website","handleChange","values","errors","classes","hasSite","website","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAACK,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,aAAa,EAAE,QAFX;AAGJC,MAAAA,cAAc,EAAE,QAHZ;AAIJC,MAAAA,UAAU,EAAE,QAJR;AAKJC,MAAAA,KAAK,EAAE,OALH;AAMJC,MAAAA,QAAQ,EAAE;AANN,KADiC;AASvCC,IAAAA,SAAS,EAAE;AACTF,MAAAA,KAAK,EAAE,OADE;AAETG,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,QAAQ,EAAE,CAHD;AAITC,MAAAA,UAAU,EAAE;AAJH,KAT4B;AAgBvCC,IAAAA,SAAS,EAAE;AACTV,MAAAA,OAAO,EAAE,MADA;AAETO,MAAAA,MAAM,EAAE,EAFC;AAGTL,MAAAA,cAAc,EAAE,eAHP;AAITE,MAAAA,KAAK,EAAE;AAJE;AAhB4B,GAAZ;AAAA,CAAD,CAA5B;;AAwBA,IAAMO,OAAO,GAAG,SAAVA,OAAU,OAAsC;AAAA;;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpD,MAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACqB,MAAM,CAACG,OAAZ,EAAqB;AACnBJ,MAAAA,YAAY,CAAC,SAAD,EAAY,EAAZ,CAAZ;AACD;AACF,GAJQ,EAIN,CAACC,MAAM,CAACG,OAAR,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAEgB,OAAO,CAACT,SADrB;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEO,MAAM,CAACI,OAHhB;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAON,YAAY,CAAC,SAAD,EAAYM,CAAC,CAACC,MAAF,CAASC,KAArB,CAAnB;AAAA,KALZ;AAME,IAAA,QAAQ,EAAE,CAACP,MAAM,CAACG,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACL,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,QAAD;AACE,MAAA,OAAO,EAAE,CAACG,MAAM,CAACG,OADnB;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMJ,YAAY,CAAC,SAAD,EAAY,CAACC,MAAM,CAACG,OAApB,CAAlB;AAAA,OAFZ;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAC,sBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AA0BD,CAnCD;;GAAML,O;UACYd,S;;;KADZc,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100vw\",\n    overflow: \"scroll\",\n  },\n  textField: {\n    width: \"17rem\",\n    margin: 0,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n\n  container: {\n    display: \"flex\",\n    margin: 35,\n    justifyContent: \"space-between\",\n    width: 200,\n  },\n}));\n\nconst Website = ({ handleChange, values, errors }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!values.hasSite) {\n      handleChange(\"website\", \"\");\n    }\n  }, [values.hasSite]);\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        className={classes.textField}\n        name=\"website\"\n        value={values.website}\n        label=\"Website\"\n        onChange={(e) => handleChange(\"website\", e.target.value)}\n        disabled={!values.hasSite}\n      />\n\n      <div className={classes.container}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={!values.hasSite}\n              onChange={() => handleChange(\"hasSite\", !values.hasSite)}\n              name=\"hasSite\"\n              color=\"primary\"\n            />\n          }\n          label=\"We don't have a site\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Website;\n"]},"metadata":{},"sourceType":"module"}