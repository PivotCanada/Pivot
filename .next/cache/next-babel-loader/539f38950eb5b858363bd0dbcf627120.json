{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Home/Stories.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext, useState } from \"react\"; // Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, ButtonGroup } from \"@material-ui/core\"; // Components\n\nimport MobileCard from \"./MobileCard\";\nimport Carousel from \"./Carousel\";\nimport PreviewCard from \"./PreviewCard\";\nimport Search from \"./Search\";\nimport PostCard from \"../Post/Main/Card\"; // Contexts\n\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport Router from \"next/router\"; // Utils\n\nimport { fetchAllUsers } from \"./utils/fetchAllUsers\";\nimport { fetchAllPosts } from \"./utils/fetchAllPosts\"; // Hooks\n\nimport useWitdh from \"../../hooks/useWidth\";\nimport useValidate from \"../../hooks/useValidate\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginRight: \"auto\",\n    marginTop: 60,\n    marginBottom: 75,\n    maxWidth: 750,\n    overflowX: \"hidden\"\n  },\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Playfair Display, serif\",\n    width: \"90vw\"\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n    fontFamily: \"Poppins, serif\"\n  },\n  button: {\n    marginTop: 45,\n    marginBottom: \"3rem\",\n    textTransform: \"none\",\n    paddingTop: 17,\n    paddingBottom: 17,\n    paddingLeft: 55,\n    paddingRight: 55,\n    fontSize: 21,\n    fontFamily: \"Poppins, serif\"\n  },\n  logo: {\n    width: 100,\n    height: \"auto\"\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\"\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\"\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\"\n  },\n  createPost: {\n    position: \"fixed\",\n    bottom: 40,\n    right: 40,\n    fontFamily: \"Noto Sans, sans serif\",\n    textTransform: \"none\"\n  },\n  addIcon: {}\n}));\n\nconst Main = ({\n  display,\n  content,\n  margin\n}) => {\n  const classes = useStyles(); //   const [posts, setPosts] = useState([]);\n  // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n  //   useEffect(() => {\n  //     fetchAllPosts().then((response) => {\n  //       console.log(response);\n  //       setPosts(response.data);\n  //     });\n  //   }, []);\n\n  if (display) {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, content.map(user => {\n      return __jsx(PreviewCard, {\n        display: display,\n        key: user._id,\n        story: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 18\n        }\n      });\n    }));\n  } else {\n    return null;\n  }\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Home/Stories.js"],"names":["useEffect","useContext","useState","makeStyles","Fab","AddIcon","Button","ButtonGroup","MobileCard","Carousel","PreviewCard","Search","PostCard","UserContext","ModalContext","Router","fetchAllUsers","fetchAllPosts","useWitdh","useValidate","useStyles","theme","root","display","flexWrap","justifyContent","marginRight","marginTop","marginBottom","maxWidth","overflowX","textField","width","flexGrow","flexShrink","innerWrapper","flexDirection","alignItems","backgroundColor","borderRadius","header","textAlign","fontSize","fontWeight","fontFamily","text","margin","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","logo","height","nfb","cardContainer","info","color","createPost","position","bottom","right","addIcon","Main","content","classes","map","user","_id"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\n// Components\nimport MobileCard from \"./MobileCard\";\nimport Carousel from \"./Carousel\";\nimport PreviewCard from \"./PreviewCard\";\nimport Search from \"./Search\";\nimport PostCard from \"../Post/Main/Card\";\n// Contexts\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { ModalContext } from \"../../contexts/ModalContext\";\nimport Router from \"next/router\";\n// Utils\nimport { fetchAllUsers } from \"./utils/fetchAllUsers\";\nimport { fetchAllPosts } from \"./utils/fetchAllPosts\";\n// Hooks\nimport useWitdh from \"../../hooks/useWidth\";\nimport useValidate from \"../../hooks/useValidate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginRight: \"auto\",\n    marginTop: 60,\n    marginBottom: 75,\n    maxWidth: 750,\n    overflowX: \"hidden\",\n  },\n\n  textField: {\n    width: \"17rem\",\n    marginTop: 20,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: 35,\n    fontSize: 48,\n    fontWeight: 500,\n    fontFamily: \"Playfair Display, serif\",\n    width: \"90vw\",\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"90vw\",\n    margin: 5,\n    fontWeight: 300,\n    fontSize: 22,\n    fontFamily: \"Poppins, serif\",\n  },\n\n  button: {\n    marginTop: 45,\n    marginBottom: \"3rem\",\n    textTransform: \"none\",\n    paddingTop: 17,\n    paddingBottom: 17,\n    paddingLeft: 55,\n    paddingRight: 55,\n    fontSize: 21,\n    fontFamily: \"Poppins, serif\",\n  },\n  logo: {\n    width: 100,\n    height: \"auto\",\n  },\n  nfb: {\n    width: 100,\n    height: \"auto\",\n  },\n  cardContainer: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginTop: 50,\n    overflowX: \"hidden\",\n    width: \"100%\",\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 25,\n    marginTop: 50,\n    fontSize: 18,\n    fontWeight: 500,\n    fontFamily: \"Poppins, serif\",\n    color: \"black\",\n  },\n  createPost: {\n    position: \"fixed\",\n    bottom: 40,\n    right: 40,\n    fontFamily: \"Noto Sans, sans serif\",\n    textTransform: \"none\",\n  },\n  addIcon: {},\n}));\n\nconst Main = ({ display, content, margin }) => {\n  const classes = useStyles();\n  //   const [posts, setPosts] = useState([]);\n\n  // TODO : Replace with HOC ( I really mean Hook! ) functionality ...\n\n  //   useEffect(() => {\n  //     fetchAllPosts().then((response) => {\n  //       console.log(response);\n  //       setPosts(response.data);\n  //     });\n  //   }, []);\n\n  if (display) {\n    return (\n      <div className={classes.root}>\n        {content.map((user) => {\n          return <PreviewCard display={display} key={user._id} story={user} />;\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}