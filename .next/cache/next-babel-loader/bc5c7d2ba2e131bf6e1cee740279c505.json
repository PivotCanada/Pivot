{"ast":null,"code":"var _jsxFileName = \"/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Create/MainProfile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Router from \"next/router\"; // Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; // Components\n\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\"; // Contexts\n\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { ModalContext } from \"../../../contexts/ModalContext\"; // Utils\n\nimport { createPost } from \"./utils/createPost\"; // Hooks\n\nimport useWidth from \"../../../hooks/useWidth\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: 75,\n    border: \"1px solid #e0e0e0\",\n    borderRadius: 5,\n    padding: 20,\n    marginTop: 50,\n    marginBottom: 10,\n    width: \"100%\",\n    maxWidth: 500\n  },\n  textField: {\n    width: \"100%\",\n    flexGrow: 1,\n    flexShrink: 1,\n    border: \"none\"\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  cardWrapper: {\n    display: \"flex\",\n    alignItems: \"start\",\n    backgroundColor: \"white\"\n  },\n  inputWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\",\n    backgroundColor: \"white\",\n    marginLeft: 20,\n    width: \"75%\"\n  },\n  innerinnerWrapper: {\n    display: \"flex\",\n    marginTop: 10,\n    justifyContent: \"space-between\",\n    backgroundColor: \"white\",\n    width: \"100%\"\n  },\n  button: {\n    textTransform: \"none\",\n    marginTop: 21,\n    paddingTop: 3,\n    paddingBottom: 3,\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 12,\n    width: 80,\n    height: 30,\n    fontFamily: \"Open Sans, sans serif\"\n  }\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    setShowCreate\n  } = useContext(ModalContext);\n\n  const onSubmit = async text => {\n    setLoading(true);\n    let post = {\n      text: text,\n      author: {\n        _id: user._id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        photo: user.photo\n      },\n      tags: tags\n    };\n    await createPost(post).then(response => {\n      console.log(response);\n\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.innerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.cardWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(UserCard, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: classes.inputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    multiline: true,\n    maxRows: 4,\n    className: classes.textField,\n    type: \"text\",\n    label: \"What's on your mind?\",\n    value: text,\n    onChange: e => {\n      setText(e.target.value);\n\n      if (e.target.value.length > 0) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: show ? \"flex\" : \"none\"\n    },\n    className: classes.innerinnerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(Industry, {\n    tags: tags,\n    setTags: setTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    disabled: text.length === 0,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => onSubmit(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Create\"))))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/pivot-front-end/components/Post/Create/MainProfile.js"],"names":["useContext","useState","Router","makeStyles","TextField","Button","UserCard","Industry","UserContext","ModalContext","createPost","useWidth","useStyles","theme","root","display","flexDirection","minHeight","border","borderRadius","padding","marginTop","marginBottom","width","maxWidth","textField","flexGrow","flexShrink","innerWrapper","justifyContent","backgroundColor","cardWrapper","alignItems","inputWrapper","marginLeft","innerinnerWrapper","button","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","fontSize","height","fontFamily","Main","classes","loading","setLoading","text","setText","tags","setTags","show","setShow","user","setShowCreate","onSubmit","post","author","_id","firstname","lastname","photo","then","response","console","log","status","reload","e","target","value","length"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Router from \"next/router\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n// Components\nimport UserCard from \"./UserCard\";\nimport Industry from \"./Industry\";\n// Contexts\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { ModalContext } from \"../../../contexts/ModalContext\";\n\n// Utils\nimport { createPost } from \"./utils/createPost\";\n// Hooks\nimport useWidth from \"../../../hooks/useWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: 75,\n\n    border: \"1px solid #e0e0e0\",\n    borderRadius: 5,\n    padding: 20,\n    marginTop: 50,\n    marginBottom: 10,\n    width: \"100%\",\n    maxWidth: 500,\n  },\n  textField: {\n    width: \"100%\",\n    flexGrow: 1,\n    flexShrink: 1,\n\n    border: \"none\",\n  },\n  innerWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  cardWrapper: {\n    display: \"flex\",\n\n    alignItems: \"start\",\n    backgroundColor: \"white\",\n  },\n  inputWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\",\n    backgroundColor: \"white\",\n\n    marginLeft: 20,\n    width: \"75%\",\n  },\n  innerinnerWrapper: {\n    display: \"flex\",\n    marginTop: 10,\n\n    justifyContent: \"space-between\",\n    backgroundColor: \"white\",\n\n    width: \"100%\",\n  },\n  button: {\n    textTransform: \"none\",\n    marginTop: 21,\n    paddingTop: 3,\n    paddingBottom: 3,\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 12,\n    width: 80,\n    height: 30,\n    fontFamily: \"Open Sans, sans serif\",\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [show, setShow] = useState(false);\n  const { user } = useContext(UserContext);\n  const { setShowCreate } = useContext(ModalContext);\n\n  const onSubmit = async (text) => {\n    setLoading(true);\n\n    let post = {\n      text: text,\n      author: {\n        _id: user._id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        photo: user.photo,\n      },\n      tags: tags,\n    };\n\n    await createPost(post).then((response) => {\n      console.log(response);\n      if (response.status === \"success\") {\n        setLoading(false);\n        Router.reload();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerWrapper}>\n        <div className={classes.cardWrapper}>\n          <UserCard user={user} />\n          <div className={classes.inputWrapper}>\n            <TextField\n              multiline\n              maxRows={4}\n              className={classes.textField}\n              type=\"text\"\n              label=\"What's on your mind?\"\n              value={text}\n              onChange={(e) => {\n                setText(e.target.value);\n\n                if (e.target.value.length > 0) {\n                  setShow(true);\n                } else {\n                  setShow(false);\n                }\n              }}\n            />\n            <div\n              style={{ display: show ? \"flex\" : \"none\" }}\n              className={classes.innerinnerWrapper}\n            >\n              <Industry tags={tags} setTags={setTags} />\n              <Button\n                disabled={text.length === 0}\n                variant={\"contained\"}\n                color={\"primary\"}\n                className={classes.button}\n                onClick={() => onSubmit(text)}\n              >\n                Create\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}